{"ast":null,"code":"import _asyncToGenerator from \"/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.page.scss?ngResource\";\nimport { Component, NgZone, ViewChild } from '@angular/core';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { ModalController, Platform, NavController } from '@ionic/angular';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { OverlayService } from '../services/overlay.service';\nimport { GeocodeService } from '../services/geocode.service';\nimport { MapService } from '../services/map.service'; // import { Marker } from '@capacitor/google-maps';\n\nimport { AvatarService } from '../services/avatar.service';\nimport { timer, interval } from 'rxjs';\nimport { Firestore, onSnapshot, doc } from '@angular/fire/firestore';\nimport { Auth } from '@angular/fire/auth';\nimport { AuthService } from '../services/auth.service';\nlet HomePage = class HomePage {\n  constructor(authService, auth, map, nav, platform, firestore, database, ngZone, geocode, overlay, modalCtrl) {\n    this.authService = authService;\n    this.auth = auth;\n    this.map = map;\n    this.nav = nav;\n    this.platform = platform;\n    this.firestore = firestore;\n    this.database = database;\n    this.ngZone = ngZone;\n    this.geocode = geocode;\n    this.overlay = overlay;\n    this.modalCtrl = modalCtrl;\n    this.profile = null;\n    this.address = 'Unknown';\n    this.cash = false;\n    this.state = [];\n    this.showResetLocationButton = false;\n    this.destinationAddress = 'Drag To Pick Destination';\n    this.locationAddress = 'Loading...';\n    this.price = 0;\n    this.current_Request_Number = -1;\n  } //start the scene\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.EnterBookingStage();\n\n        yield Geolocation.checkPermissions();\n        const coordinates = yield Geolocation.getCurrentPosition();\n        _this.coordinates = coordinates;\n        yield _this.map.createMap(_this.mapRef.nativeElement, coordinates);\n        _this.mapy = true;\n\n        _this.database.getCards().subscribe(d => {\n          console.log(d);\n          _this.cards = d;\n\n          _this.cards.forEach(element => {\n            console.log(element);\n\n            if (element.selected == true) {\n              _this.selected = element;\n              _this.selectedCard = element.name;\n              if (_this.selectedCard == 'cash') _this.cash = true;\n              console.log(_this.selectedCard);\n            }\n          });\n        });\n\n        _this.database.getKnownPlaces().subscribe(d => {\n          _this.places = d.slice(0, 3);\n          _this.places;\n          console.log(d);\n        });\n\n        _this.actualLocation = _this.map.actualLocation;\n        _this.locationAddress = _this.map.locationAddress;\n        _this.LatLng = {\n          lat: coordinates.coords.latitude,\n          lng: coordinates.coords.longitude\n        }; //this.database.CreateNewDriver(coordinates);\n\n        _this.map.newMap.setOnCameraIdleListener(g => {\n          _this.ngZone.run(() => {\n            _this.showResetLocationButton = true;\n          });\n        });\n\n        _this.map.newMap.setOnCameraIdleListener(g => {\n          _this.ngZone.run( /*#__PURE__*/_asyncToGenerator(function* () {\n            console.log(g);\n\n            if (_this.mapPinStage) {\n              const address = yield _this.geocode.getAddress(g.latitude, g.longitude);\n              _this.D_LatLng = {\n                lat: g.latitude,\n                lng: g.longitude\n              };\n              _this.actualDestination = _this.map.actualLocation;\n              ;\n              _this.destinationAddress = address.data.results[1].address_components[0].long_name + ' ' + address.data.results[1].address_components[1].long_name;\n            }\n          }));\n        });\n\n        yield _this.map.newMap.enableCurrentLocation(true);\n        _this.price = null;\n      } catch (e) {\n        _this.overlay.showAlert('Error', e);\n      }\n\n      yield _this.checkDriversAround(_this.coordinates);\n    })();\n  }\n\n  logout() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.authService.logout();\n    })();\n  }\n\n  ionViewDidLeave() {\n    if (this.listen) this.listen.unsubscribe();\n  }\n\n  ionViewDidEnter() {\n    var _this3 = this;\n\n    if (this.coordinates) this.listen = interval(5000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this3.checkDriversAround(_this3.coordinates);\n    }));\n  }\n\n  simulateDriverAPP() {\n    return _asyncToGenerator(function* () {\n      let coords = {\n        coords: {\n          latitude: 51.5074,\n          longitude: 0.1278\n        }\n      };\n    })();\n  } /// Show all drivers around the user and reset marker states\n\n\n  checkDriversAround(cord) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        let numbs = [];\n        const center = [cord.coords.latitude, cord.coords.longitude];\n        const radiusInM = 500 * 1000;\n        const drivers = yield _this4.database.checkDriversWithin(center, radiusInM); //Start Listening for any changes within;\n\n        _this4.current_Request_Number = 0;\n        console.log(\"Should show drivers here  \" + drivers);\n\n        if (drivers.length == 0) {\n          _this4.NoDrivers = true;\n        } else {\n          _this4.NoDrivers = false;\n          console.log(drivers);\n          _this4.drivers_Requested = [];\n          _this4._carmarkers = [];\n          drivers.forEach((element, key, arr) => {\n            numbs.push(element.duration);\n            const min = Math.min(...numbs);\n            _this4.driver_duration_apart = min;\n\n            if (element.duration <= 1000 && element.onlineState == true) {\n              _this4.drivers_Requested.push(element);\n\n              console.log(_this4.drivers_Requested);\n              _this4.carname = _this4.drivers_Requested[0].Driver_car;\n              _this4.driver_ID = _this4.drivers_Requested[0].Driver_id;\n              _this4.driver_number_of_seats = _this4.drivers_Requested[0].seats;\n              _this4.DriverLatLng = {\n                lat: _this4.drivers_Requested[0].Driver_lat,\n                lng: _this4.drivers_Requested[0].Driver_lng\n              }; //  alert(this.drivers_Requested[0]);\n            } else {\n              if (Object.is(arr.length - 1, key)) {\n                _this4.NoDrivers = true;\n              }\n            } //alert(JSON.stringify(element));\n            // console.log(min);\n            // console.log(element);\n\n\n            _this4.closeDrivers = element;\n          });\n        }\n      } catch (e) {\n        _this4.overlay.showAlert('Error', e);\n      }\n    })();\n  }\n\n  chooseCard(even) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(even);\n\n      _this5.overlay.showLoader('Please wait..');\n\n      yield _this5.database.updateCArd(_this5.selected.name, _this5.selected.number, _this5.selected.type, _this5.selected.id, false);\n\n      _this5.cards.forEach( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (element) {\n          console.log(element);\n\n          if (element.name == even.detail.value) {\n            yield _this5.database.updateCArd(element.name, element.number, element.type, element.id, true);\n\n            _this5.overlay.hideLoader();\n          }\n        });\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  StartRide() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this6.marker1) {\n          yield _this6.map.newMap.removeMarker(_this6.marker1.toString());\n          _this6.marker1 = null;\n          console.log('removed ', _this6.marker1);\n        }\n\n        if (_this6.marker2) {\n          yield _this6.map.newMap.removeMarker(_this6.marker2.toString());\n          _this6.marker2 = null;\n          console.log('removed ', _this6.marker2);\n        }\n\n        if (_this6._carmarkers) {\n          _this6._carmarkers.forEach( /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator(function* (element) {\n              console.log(element, _this6._carmarkers);\n              yield _this6.map.newMap.removeMarker(element);\n              console.log('removed ', element);\n              _this6._carmarkers = null;\n            });\n\n            return function (_x2) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n        }\n\n        _this6.map.newMap.enableCurrentLocation(false);\n\n        _this6.BookRide();\n      } catch (e) {\n        _this6.overlay.showAlert('MArker Error', e);\n      }\n    })();\n  }\n\n  BookRide() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this7.overlay.showLoader('');\n\n      if (_this7.driver_marker) {\n        yield _this7.map.newMap.removeMarker(_this7.driver_marker);\n        _this7.driver_marker = null;\n      }\n\n      if (_this7.rider_marker) {\n        yield _this7.map.newMap.removeMarker(_this7.rider_marker);\n        _this7.rider_marker = null;\n      }\n\n      let driver = _this7.drivers_Requested[_this7.current_Request_Number];\n      const userDocRef = doc(_this7.firestore, `Request`, driver.Driver_id);\n      const unsub = onSnapshot(doc(_this7.firestore, \"Drivers\", driver.Driver_id), /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator(function* (doc) {\n          if (_this7.price && doc.data().onlineState == true) {\n            unsub();\n            yield _this7.database.RequestRideWithRiderDetails(_this7.LatLng, _this7.destinationAddress, _this7.locationAddress, _this7.D_LatLng, driver.Driver_id, _this7.price, _this7.cash); //alert(driver);\n            //  if (driver != undefined){\n\n            _this7.currentDriver = driver;\n            console.log(driver); // doc.data() is never undefined for query doc snapshots\n\n            console.log(doc.data()); // Driver Things;\n\n            _this7.DriverLatLng = {\n              lat: _this7.drivers_Requested[_this7.current_Request_Number].Driver_lat,\n              lng: _this7.drivers_Requested[_this7.current_Request_Number].Driver_lng\n            };\n            yield _this7.createAndMoveMarkersOnRealtime(_this7.DriverLatLng, false, false);\n\n            _this7.overlay.hideLoader();\n\n            _this7.EnterSearchingStage(); //after some time check if the next element has a driver if no request from driver, then close request and start a new request.\n\n\n            console.log('This is the driver ' + driver);\n\n            _this7.startTimer(driver, 20);\n\n            _this7.numCalls = timer(20000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n              // await this.database.updateDriverOnlineState(driver.Driver_id)\n              // await this.database.CreateandUpdateDriver(coords, driver.Driver_id)\n              _this7.countDown.unsubscribe(); ///if the the there is still a driver in the array then call him else cancel the request\n\n\n              if (_this7.drivers_Requested[_this7.current_Request_Number + 1] != null) {\n                _this7.current_Request_Number++;\n                console.log(driver);\n\n                _this7.BookRide();\n\n                _this7.unsubscribe();\n\n                _this7.numCalls.unsubscribe();\n\n                console.log('requested another driver' + _this7.current_Request_Number);\n              } else {\n                _this7.numCalls.unsubscribe();\n\n                _this7.unsubscribe();\n\n                _this7.GoHome();\n\n                console.log('No more Drivers To Request' + _this7.current_Request_Number);\n\n                if (_this7.driver_marker) {\n                  yield _this7.map.newMap.removeMarker(_this7.driver_marker.toString());\n                  _this7.driver_marker = null;\n                }\n\n                if (_this7.rider_marker) {\n                  yield _this7.map.newMap.removeMarker(_this7.rider_marker.toString());\n                  _this7.rider_marker = null;\n                }\n              }\n            }));\n            _this7.unsubscribe = onSnapshot(userDocRef, /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (doc) {\n                // console.log(snapshot);\n                //If the driver rejects the request then close request and start a new one     \n                if (doc.data().cancel == true) {\n                  _this7.countDown.unsubscribe();\n\n                  _this7.numCalls.unsubscribe(); ///if the the there is still a driver in the array then call him else cancel the request\n\n\n                  if (_this7.drivers_Requested[_this7.current_Request_Number + 1].Driver_id) {\n                    _this7.current_Request_Number++;\n\n                    _this7.BookRide();\n\n                    _this7.unsubscribe();\n\n                    console.log('requested another driver' + _this7.current_Request_Number);\n                  } else {\n                    _this7.unsubscribe();\n\n                    _this7.GoHome();\n\n                    console.log('No more Drivers To Request' + _this7.current_Request_Number);\n\n                    if (_this7.driver_marker) {\n                      yield _this7.map.newMap.removeMarker(_this7.driver_marker.toString());\n                      _this7.driver_marker = null;\n                    }\n\n                    if (_this7.rider_marker) {\n                      yield _this7.map.newMap.removeMarker(_this7.rider_marker.toString());\n                      _this7.rider_marker = null;\n                    }\n                  } //  await this.database.RestartRequestSinceReject(this.drivers_Requested[this.current_Request_Number].id)\n\n                }\n\n                if (doc.data().start == true) {\n                  _this7.driverInfo = doc.data();\n\n                  if (_this7.canCheck) {\n                    //show rider marker going to destination on realtime with updates;\n                    _this7.canCheck = false;\n\n                    _this7.clearPrevMarkers();\n\n                    _this7.updateDriverSubcription = timer(4000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n                      yield _this7.createAndMoveMarkersOnRealtime(_this7.D_LatLng, true, true);\n                      _this7.canCheck = true;\n                    }));\n                  }\n\n                  console.log(doc.data());\n\n                  _this7.EnterDrivingToDestinationStage();\n\n                  if (doc.data().cancel == true) {\n                    if (!_this7.riderCleared) {\n                      _this7.overlay.showAlert('Driver', 'Cancelled');\n                    } else {\n                      _this7.overlay.showAlert('You', 'Cancelled');\n                    }\n\n                    _this7.unsubscribe();\n\n                    _this7.GoHome();\n                  }\n                }\n\n                if (doc.data().stop == true) {\n                  _this7.unsubscribe(); //this.overlay.showAlert('Ride', 'Completed');\n\n\n                  _this7.ClearRide();\n\n                  yield _this7.database.createHistory(doc.data());\n                  if (_this7.countDown) _this7.countDown.unsubscribe();\n                }\n\n                if (doc.data().Driver_name && doc.data().stop == false && doc.data().start == false && doc.data().cancel == false) {\n                  _this7.driverInfo = doc.data();\n\n                  _this7.countDown.unsubscribe();\n\n                  _this7.numCalls.unsubscribe();\n\n                  _this7.DriverLatLng = {\n                    lat: doc.data().Driver_lat,\n                    lng: doc.data().Driver_lng\n                  };\n\n                  if (_this7.canCheck) {\n                    // show rider marker and driver marker coming together;\n                    _this7.canCheck = false;\n\n                    _this7.clearPrevMarkers();\n\n                    _this7.updateDriverSubcription = timer(4000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n                      _this7.canCheck = true;\n                      yield _this7.createAndMoveMarkersOnRealtime(_this7.DriverLatLng, true, false);\n                    }));\n                  }\n\n                  console.log(doc.data());\n\n                  _this7.EnterTrackingStage();\n                }\n              });\n\n              return function (_x4) {\n                return _ref7.apply(this, arguments);\n              };\n            }()); // timer(10000).subscribe(async ()=>{\n            //   this.database.PushDriverToRequest(driver);\n            //  })\n          } else {\n            if (_this7.countDown) _this7.countDown.unsubscribe();\n\n            if (_this7.drivers_Requested[_this7.current_Request_Number + 1] != null) {\n              _this7.current_Request_Number++;\n              console.log(driver);\n\n              _this7.BookRide();\n\n              console.log('requested another driver' + _this7.current_Request_Number);\n            } else {\n              _this7.GoHome();\n\n              _this7.overlay.showAlert('Busy', 'The Requested Driver is currently Busy, Please Try again');\n\n              console.log('No more Drivers To Request' + _this7.current_Request_Number);\n            }\n          } // }else{\n          //   this.NoDrivers = true;\n          //   this.EnterNoDriverStage();\n          // }\n\n        });\n\n        return function (_x3) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  startTimer(driver, sec) {\n    var _this8 = this;\n\n    this.countDown = interval(1000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n      yield _this8.database.UpdateCountDown(sec, driver);\n      sec--;\n\n      if (sec == 0) {\n        _this8.countDown.unsubscribe();\n      }\n    }));\n  }\n\n  goBackTOAutocomplete() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this9.marker1) {\n        yield _this9.map.newMap.removeMarker(_this9.marker1);\n        _this9.marker1 = null;\n      }\n\n      if (_this9.marker2) {\n        yield _this9.map.newMap.removeMarker(_this9.marker2);\n        _this9.marker2 = null;\n      }\n\n      if (_this9._carmarkers) {\n        _this9._carmarkers.forEach( /*#__PURE__*/function () {\n          var _ref11 = _asyncToGenerator(function* (element) {\n            console.log(element, _this9._carmarkers);\n            yield _this9.map.newMap.removeMarker(element);\n            console.log('removed ', element);\n          });\n\n          return function (_x5) {\n            return _ref11.apply(this, arguments);\n          };\n        }());\n      }\n\n      _this9.showAutocompleteModal();\n    })();\n  } //open the search section for autocomplete\n\n\n  showAutocompleteModal() {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      const options = {\n        component: AutocompleteComponent,\n        componentProps: {\n          LatLng: _this10.LatLng,\n          locationAddress: _this10.locationAddress\n        },\n        swipeToClose: true\n      }; // this.map.newMap.hide();\n\n      const modal = yield _this10.modalCtrl.create(options);\n      modal.present();\n      const {\n        data\n      } = yield modal.onWillDismiss();\n      console.log(data); // this.map.newMap.show();\n\n      _this10.data = data;\n\n      if (data.pinOnMap) {\n        _this10.EnterMapPinStage();\n\n        _this10.mapPinDrag = true;\n      }\n\n      if (data.home) {\n        _this10.EnterBookingStage();\n\n        yield _this10.map.newMap.setCamera({\n          animate: true,\n          animationDuration: 500,\n          zoom: 15,\n          coordinate: _this10.LatLng\n        });\n      }\n\n      if (data.searching) {\n        _this10.database.AddKnownPlace(data);\n\n        _this10.destinationAddress = data.full;\n        _this10.actualDestination = data.whole.full;\n        const latLng = yield _this10.geocode.getLatLng(data.whole.description);\n        _this10.D_LatLng = {\n          lat: latLng.data.results[0].geometry.location.lat,\n          lng: latLng.data.results[0].geometry.location.lng\n        };\n\n        _this10.getDistanceandDirections();\n      }\n    })();\n  }\n\n  RequestRide(dat) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this11.NoDrivers) {\n        _this11.destinationAddress = dat.place.full;\n        _this11.actualDestination = dat.place.whole.full;\n        const latLng = yield _this11.geocode.getLatLng(dat.place.whole.description);\n        _this11.D_LatLng = {\n          lat: latLng.data.results[0].geometry.location.lat,\n          lng: latLng.data.results[0].geometry.location.lng\n        };\n\n        _this11.getDistanceandDirections();\n      } else {\n        _this11.EnterNoDriverStage();\n      }\n    })();\n  } //reset the map to the user location view\n\n\n  resetLocation() {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(_this12.LatLng);\n      yield _this12.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: _this12.LatLng\n      });\n      _this12.showResetLocationButton = false;\n    })();\n  } ///get the distance and directions to destination\n\n\n  getDistanceandDirections() {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this13.listen) _this13.listen.unsubscribe();\n\n      if (_this13.D_LatLng.lat) {\n        if (!_this13.NoDrivers) {\n          _this13.EnterConfirmStage();\n        } else {\n          _this13.EnterNoDriverStage();\n        }\n\n        var origin1 = new google.maps.LatLng(_this13.LatLng.lat, _this13.LatLng.lng);\n        var origin2 = new google.maps.LatLng(_this13.D_LatLng.lat, _this13.D_LatLng.lng);\n        if (!_this13.NoDrivers) var request = {\n          origin: origin1,\n          destination: origin2,\n          travelMode: google.maps.TravelMode.DRIVING\n        };\n\n        _this13.geocode.directions.route(request, /*#__PURE__*/function () {\n          var _ref12 = _asyncToGenerator(function* (response, status) {\n            if (status == 'OK') {\n              _this13.direction = response;\n              _this13.distance = response.routes[0].legs[0].distance.value;\n              _this13.bounds = response.routes[0].bounds;\n              _this13.price = _this13.distance / 10;\n              yield _this13.UpdateCarMarker(_this13.closeDrivers);\n              yield _this13.createAndAddMarkers(_this13.LatLng, _this13.D_LatLng, _this13.bounds);\n            } else {\n              _this13.overlay.showAlert('Direction ERROR', JSON.stringify(response));\n            }\n          });\n\n          return function (_x6, _x7) {\n            return _ref12.apply(this, arguments);\n          };\n        }());\n      } else {\n        _this13.overlay.showAlert('Drag Map', 'Drag the map and stop on your required destination');\n      }\n    })();\n  } //create and update car markers on the map.\n\n\n  UpdateCarMarker(element) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      let latlng = {\n        lat: element.Driver_lat,\n        lng: element.Driver_lng\n      };\n      const markers = yield _this14.map.newMap.addMarker({\n        coordinate: latlng,\n        iconUrl: 'https://i.ibb.co/KDy365b/hatchback.png',\n        title: 'My 2'\n      });\n      if (markers) _this14._carmarkers.push(markers.toString());\n      console.log(_this14._carmarkers, markers.toString());\n    })();\n  } //Return to Map page\n\n\n  GoHome() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this15.map.newMap.enableCurrentLocation(true);\n      _this15.current_Request_Number = 0;\n      _this15.price = null;\n      _this15.listen = interval(5000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this15.checkDriversAround(_this15.coordinates);\n      }));\n\n      _this15.EnterBookingStage();\n\n      yield _this15.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: _this15.LatLng\n      });\n    })();\n  }\n\n  GotoSupport() {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this16.nav.navigateForward('support');\n    })();\n  }\n\n  clearPrevMarkers() {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this17.driver_marker) {\n        yield _this17.map.newMap.removeMarker(_this17.driver_marker.toString());\n        _this17.driver_marker = null;\n      }\n\n      if (_this17.rider_marker) {\n        yield _this17.map.newMap.removeMarker(_this17.rider_marker.toString());\n        _this17.rider_marker = null;\n      }\n    })();\n  } //Return to Map page\n\n\n  ReturnHome() {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      _this18.EnterBookingStage();\n\n      yield _this18.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: _this18.LatLng\n      });\n    })();\n  } //Cancel the Current Ride Request.....\n\n\n  CancelRide() {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      _this19.overlay.showLoader('Please Wait..');\n\n      if (_this19.driver_marker) {\n        yield _this19.map.newMap.removeMarker(_this19.driver_marker.toString());\n        _this19.driver_marker = null;\n      }\n\n      if (_this19.rider_marker) {\n        yield _this19.map.newMap.removeMarker(_this19.rider_marker.toString());\n        _this19.rider_marker = null;\n      }\n\n      let coords = {\n        coords: {\n          latitude: _this19.currentDriver.Driver_lat,\n          longitude: _this19.currentDriver.Driver_lng\n        }\n      };\n\n      _this19.unsubscribe();\n\n      _this19.numCalls.unsubscribe();\n\n      _this19.riderCleared = true;\n      yield _this19.database.cancelRide(_this19.currentDriver.Driver_id);\n      yield _this19.map.newMap.enableCurrentLocation(true);\n      _this19.current_Request_Number = 0;\n      _this19.price = null;\n      _this19.listen = interval(5000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this19.checkDriversAround(_this19.coordinates);\n      }));\n\n      _this19.EnterBookingStage();\n\n      _this19.overlay.hideLoader();\n\n      yield _this19.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: _this19.LatLng\n      });\n    })();\n  } ///Clear the ride that has already started\n\n\n  ClearRide() {\n    var _this20 = this;\n\n    return _asyncToGenerator(function* () {\n      _this20.EnterBookingStage();\n\n      if (_this20.driver_marker) {\n        yield _this20.map.newMap.removeMarker(_this20.driver_marker);\n        _this20.driver_marker = null;\n      }\n\n      if (_this20.rider_marker) {\n        yield _this20.map.newMap.removeMarker(_this20.rider_marker);\n        _this20.rider_marker = null;\n      }\n\n      yield _this20.map.newMap.enableCurrentLocation(true);\n      _this20.current_Request_Number = 0;\n      _this20.price = null;\n      _this20.listen = interval(5000).subscribe( /*#__PURE__*/_asyncToGenerator(function* () {\n        yield _this20.checkDriversAround(_this20.coordinates);\n      }));\n      yield _this20.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: _this20.LatLng,\n        bearing: 0\n      });\n    })();\n  }\n\n  CallDriver() {\n    return _asyncToGenerator(function* () {})();\n  } ///create markers and possition them in the view of the user\n\n\n  createAndMoveMarkersOnRealtime(otherLatLng, state, isDestination) {\n    var _this21 = this;\n\n    return _asyncToGenerator(function* () {\n      var origin1 = new google.maps.LatLng(_this21.LatLng.lat, _this21.LatLng.lng);\n      var origin2 = new google.maps.LatLng(otherLatLng.lat, otherLatLng.lng);\n      var request = {\n        origin: origin2,\n        destination: origin1,\n        travelMode: google.maps.TravelMode.DRIVING\n      };\n\n      _this21.geocode.directions.route(request, /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator(function* (response, status) {\n          if (status == 'OK') {\n            _this21.bounds = response.routes[0].bounds;\n            _this21.duration = response.routes[0].legs[0].duration.text;\n            let markerUrl;\n\n            if (!isDestination) {\n              markerUrl = 'https://i.ibb.co/KDy365b/hatchback.png';\n            } else {\n              markerUrl = 'https://i.ibb.co/bWx9V64/favourite.png';\n            }\n\n            _this21.driver_marker = yield _this21.map.newMap.addMarker({\n              coordinate: otherLatLng,\n              iconUrl: markerUrl,\n              title: 'My 2'\n            });\n            _this21.rider_marker = yield _this21.map.newMap.addMarker({\n              coordinate: _this21.LatLng,\n              iconUrl: \"https://i.ibb.co/N9LXGk3/home-1.png\",\n              title: 'My 2'\n            });\n            const locs = [{\n              geoCode: {\n                latitude: _this21.LatLng.lat,\n                longitude: _this21.LatLng.lng\n              }\n            }, {\n              geoCode: {\n                latitude: otherLatLng.lat,\n                longitude: otherLatLng.lng\n              }\n            }];\n            let go = {\n              lat: (yield _this21.map.CalculateCenter(locs)).latitude,\n              lng: (yield _this21.map.CalculateCenter(locs)).longitude\n            };\n\n            if (state) {\n              yield _this21.map.newMap.setPadding({\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 600\n              });\n            }\n\n            let mapDim = {\n              height: _this21.mapRef.nativeElement.offsetHeight / 2,\n              width: _this21.mapRef.nativeElement.offsetWidth\n            };\n            yield _this21.map.newMap.setCamera({\n              animate: true,\n              animationDuration: 500,\n              zoom: yield _this21.map.getBoundsZoomLevel(_this21.bounds, mapDim),\n              coordinate: go,\n              bearing: 0\n            });\n            _this21.canCheck = true;\n          } else {\n            _this21.overlay.showAlert('Direction ERROR', JSON.stringify(response));\n          }\n        });\n\n        return function (_x8, _x9) {\n          return _ref16.apply(this, arguments);\n        };\n      }());\n    })();\n  } ///create markers and possition them in the view of the user\n\n\n  createAndAddMarkers(loc, des, bounds) {\n    var _this22 = this;\n\n    return _asyncToGenerator(function* () {\n      _this22.marker1 = yield _this22.map.newMap.addMarker({\n        coordinate: loc,\n        iconUrl: \"https://i.ibb.co/N9LXGk3/home-1.png\",\n        title: 'My 2'\n      });\n      _this22.marker2 = yield _this22.map.newMap.addMarker({\n        coordinate: des,\n        iconUrl: 'https://i.ibb.co/bWx9V64/favourite.png',\n        title: 'My 2'\n      });\n      const locs = [{\n        geoCode: {\n          latitude: loc.lat,\n          longitude: loc.lng\n        }\n      }, {\n        geoCode: {\n          latitude: des.lat,\n          longitude: des.lng\n        }\n      }];\n      let go = {\n        lat: (yield _this22.map.CalculateCenter(locs)).latitude,\n        lng: (yield _this22.map.CalculateCenter(locs)).longitude\n      };\n      let mapDim = {\n        height: _this22.mapRef.nativeElement.offsetHeight / 2,\n        width: _this22.mapRef.nativeElement.offsetWidth\n      };\n      yield _this22.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: yield _this22.map.getBoundsZoomLevel(bounds, mapDim),\n        coordinate: go,\n        bearing: 0\n      });\n    })();\n  }\n\n  EnterBookingStage() {\n    this.bookingStage = true;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterMapPinStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = true;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterConfirmStage() {\n    this.bookingStage = false;\n    this.confirmStage = true;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterSearchingStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = true;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterNoDriverStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = true;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterTrackingStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = true;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterDrivingToDestinationStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.mapPinStage = false;\n    this.noDriverStage = false;\n    this.drivingToDestinationStage = true;\n  }\n\n};\n\nHomePage.ctorParameters = () => [{\n  type: AuthService\n}, {\n  type: Auth\n}, {\n  type: MapService\n}, {\n  type: NavController\n}, {\n  type: Platform\n}, {\n  type: Firestore\n}, {\n  type: AvatarService\n}, {\n  type: NgZone\n}, {\n  type: GeocodeService\n}, {\n  type: OverlayService\n}, {\n  type: ModalController\n}];\n\nHomePage.propDecorators = {\n  mapRef: [{\n    type: ViewChild,\n    args: ['map']\n  }],\n  mapElement: [{\n    type: ViewChild,\n    args: ['mapElement']\n  }]\n};\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomePage);\nexport { HomePage };","map":{"version":3,"mappings":"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","names":["Component","NgZone","ViewChild","Geolocation","ModalController","Platform","NavController","AutocompleteComponent","OverlayService","GeocodeService","MapService","AvatarService","timer","interval","Firestore","onSnapshot","doc","Auth","AuthService","HomePage","constructor","authService","auth","map","nav","platform","firestore","database","ngZone","geocode","overlay","modalCtrl","ngOnInit","EnterBookingStage","checkPermissions","coordinates","getCurrentPosition","createMap","mapRef","nativeElement","mapy","getCards","subscribe","d","console","log","cards","forEach","element","selected","selectedCard","name","cash","getKnownPlaces","places","slice","actualLocation","locationAddress","LatLng","lat","coords","latitude","lng","longitude","newMap","setOnCameraIdleListener","g","run","showResetLocationButton","mapPinStage","address","getAddress","D_LatLng","actualDestination","destinationAddress","data","results","address_components","long_name","enableCurrentLocation","price","e","showAlert","checkDriversAround","logout","ionViewDidLeave","listen","unsubscribe","ionViewDidEnter","simulateDriverAPP","cord","numbs","center","radiusInM","drivers","checkDriversWithin","current_Request_Number","length","NoDrivers","drivers_Requested","_carmarkers","key","arr","push","duration","min","Math","driver_duration_apart","onlineState","carname","Driver_car","driver_ID","Driver_id","driver_number_of_seats","seats","DriverLatLng","Driver_lat","Driver_lng","Object","is","closeDrivers","chooseCard","even","showLoader","updateCArd","number","type","id","detail","value","hideLoader","StartRide","marker1","removeMarker","toString","marker2","BookRide","driver_marker","rider_marker","driver","userDocRef","unsub","RequestRideWithRiderDetails","currentDriver","createAndMoveMarkersOnRealtime","EnterSearchingStage","startTimer","numCalls","countDown","GoHome","cancel","start","driverInfo","canCheck","clearPrevMarkers","updateDriverSubcription","EnterDrivingToDestinationStage","riderCleared","stop","ClearRide","createHistory","Driver_name","EnterTrackingStage","sec","UpdateCountDown","goBackTOAutocomplete","showAutocompleteModal","options","component","componentProps","swipeToClose","modal","create","present","onWillDismiss","pinOnMap","EnterMapPinStage","mapPinDrag","home","setCamera","animate","animationDuration","zoom","coordinate","searching","AddKnownPlace","full","whole","latLng","getLatLng","description","geometry","location","getDistanceandDirections","RequestRide","dat","place","EnterNoDriverStage","resetLocation","EnterConfirmStage","origin1","google","maps","origin2","request","origin","destination","travelMode","TravelMode","DRIVING","directions","route","response","status","direction","distance","routes","legs","bounds","UpdateCarMarker","createAndAddMarkers","JSON","stringify","latlng","markers","addMarker","iconUrl","title","GotoSupport","navigateForward","ReturnHome","CancelRide","cancelRide","bearing","CallDriver","otherLatLng","state","isDestination","text","markerUrl","locs","geoCode","go","CalculateCenter","setPadding","top","left","right","bottom","mapDim","height","offsetHeight","width","offsetWidth","getBoundsZoomLevel","loc","des","bookingStage","confirmStage","trackingStage","searchingStage","noDriverStage","drivingToDestinationStage","args","selector","template"],"sourceRoot":"","sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/src/app/home/home.page.ts"],"sourcesContent":["import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Geolocation, Position } from '@capacitor/geolocation';\nimport { ModalOptions, ModalController, Platform, NavController } from '@ionic/angular';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { OverlayService } from '../services/overlay.service';\nimport { GeocodeService } from '../services/geocode.service';\nimport { MapService } from '../services/map.service';\n// import { Marker } from '@capacitor/google-maps';\nimport { AvatarService } from '../services/avatar.service';\nimport { Drivers } from '../interfaces/drivers';\n\nimport { Observable, timer, interval } from 'rxjs';\nimport { Firestore, onSnapshot, doc } from '@angular/fire/firestore';\nimport { Marker } from '@capacitor/google-maps';\nimport { Auth } from '@angular/fire/auth';\nimport { AuthService } from '../services/auth.service';\n\ndeclare var google;\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  \n  profile = null;\n  @ViewChild('map') mapRef: ElementRef<HTMLElement>;\n  mappy; \n  @ViewChild('mapElement') mapElement:  ElementRef<HTMLElement>;\n  coordinates: Position;\n  address: any = 'Unknown';\n  bookingStage: any;\n  confirmStage: any;\n  trackingStage: any;\n  searchingStage: any;\n  noDriverStage: any;\n  drivingToDestinationStage: any;\n  data: any;\n  cash: any = false;\n  state: any = [];\n  mapPinStage: boolean;\n  D_LatLng: { lat: any; lng: any; };\n  mapPinDrag: any;\n  showResetLocationButton: any = false;\n  showloader: boolean;\n  mapClass: any;\n  destinationAddress: string = 'Drag To Pick Destination';\n  locationAddress: string = 'Loading...';\n  distance: any;\n  direction: any;\n  actualDestination: any;\n  markers: any;\n  allDrivers: Observable<Drivers[]>;\n  NoDrivers: boolean;\n  driverMarker: string;\n  driver_duration_apart: number;\n  driver_number_of_seats: any;\n  price: any = 0;\n  carname: any;\n  driver_ID: any;\n  bounds: any;\n  DriverLatLng: { lat: any; lng: any; };\n  driver_marker: any;\n  drivers_Requested: any[];\n  current_Request_Number: number = -1;\n  Driver_Rejected: any;\n  numCalls: any;\n  currentDriver: any;\n  unsubscribe: import(\"@angular/fire/firestore\").Unsubscribe;\n  driverInfo: import(\"@angular/fire/firestore\").DocumentData;\n  \n  duration: any;\n  riderCleared: any;\n  updateDriverSubcription: any;\n  canCheck: boolean;\n  rider_marker: any;\n  marker1: any;\n  marker2: any;\n  actualLocation: string;\n  LatLng: { lat: number; lng: number; };\n  mapy: boolean;\n  AllCarMarkers: Marker[];\n  _carmarkers: any[];\n  cards: import(\"@angular/fire/firestore\").DocumentData[];\n  selected: any;\n  selectedCard: any;\n  closeDrivers: any;\n  countDown: any;\n  listen: any;\n  places: import(\"@angular/fire/firestore\").DocumentData[];\n\n\n  constructor( private authService: AuthService, private auth: Auth, public map: MapService, private nav: NavController, private platform: Platform, private firestore: Firestore, private readonly database: AvatarService, private ngZone: NgZone, private geocode: GeocodeService, private overlay: OverlayService, private modalCtrl: ModalController) {}\n\n\n  //start the scene\n  async ngOnInit() {\n   try{\n    this.EnterBookingStage();\n    await Geolocation.checkPermissions();\n    const coordinates = await Geolocation.getCurrentPosition();\n    this.coordinates = coordinates;\n\n   await this.map.createMap(this.mapRef.nativeElement, coordinates);\n   this.mapy = true;\n\n   this.database.getCards().subscribe((d)=>{\n    console.log(d);\n    this.cards = d\n\n    this.cards.forEach(element => {\n     console.log(element);\n      if (element.selected == true){\n       this.selected = element\n       this.selectedCard = element.name;\n       if (this.selectedCard == 'cash')\n       this.cash = true;\n       console.log(this.selectedCard);\n      }\n    });\n})\n\nthis.database.getKnownPlaces().subscribe((d)=>{\n  this.places = d.slice(0,3);\n  this.places\n  \nconsole.log(d)\n  \n})\n  \n      this.actualLocation = this.map.actualLocation;\n     this.locationAddress = this.map.locationAddress\n              \n             \n    this.LatLng = {\n      lat: coordinates.coords.latitude,\n      lng: coordinates.coords.longitude\n    }\n\n            //this.database.CreateNewDriver(coordinates);\n\n              this.map.newMap.setOnCameraIdleListener((g) => {\n                this.ngZone.run(()=>{\n                  this.showResetLocationButton = true;\n                })\n              })\n\n              this.map.newMap.setOnCameraIdleListener((g) => {\n                this.ngZone.run(async ()=>{\n                  console.log(g);\n                  if (this.mapPinStage){\n                 \n                   const address = await this.geocode.getAddress(g.latitude, g.longitude)\n                   this.D_LatLng =  {\n                    lat: g.latitude,\n                    lng: g.longitude,\n                  }\n                  this.actualDestination = this.map.actualLocation;;\n                  this.destinationAddress = address.data.results[1].address_components[0].long_name + ' ' + address.data.results[1].address_components[1].long_name;\n                  }\n                })\n              })\n             \n              await this.map.newMap.enableCurrentLocation(true);\n             \n              this.price = null;\n\n\n            }catch(e){\n              this.overlay.showAlert('Error', e)\n            }    \n           \n            await this.checkDriversAround(this.coordinates);\n\n}\n\nasync logout() {\n  await this.authService.logout();\n}\n\nionViewDidLeave() {\n  if(this.listen)\n    this.listen.unsubscribe();\n}\n\nionViewDidEnter(){\n  if (this.coordinates)\n  this.listen = interval(5000).subscribe(async ()=>{\n    await this.checkDriversAround(this.coordinates);\n  })\n\n}\n\n\n  async simulateDriverAPP(){\n    let coords = {\n      coords: {latitude: 51.5074, longitude: 0.1278},\n    }\n  }\n\n\n\n/// Show all drivers around the user and reset marker states\n  async checkDriversAround(cord){\n    try{\n      let numbs = [];\n      \n      const center = [cord.coords.latitude, cord.coords.longitude];\n      const radiusInM = 500 * 1000;\n      const drivers = await this.database.checkDriversWithin(center, radiusInM);\n         //Start Listening for any changes within;\n         this.current_Request_Number = 0\n      console.log(\"Should show drivers here  \"+drivers);\n      if (drivers.length == 0){\n        this.NoDrivers = true;\n      }else{\n        this.NoDrivers = false;\n        console.log(drivers);\n        this.drivers_Requested = [];\n        this._carmarkers = [];\n        drivers.forEach((element, key, arr) => {\n          numbs.push(element.duration)\n          const min = Math.min(...numbs)\n          this.driver_duration_apart = min;\n          if (element.duration <= 1000 && element.onlineState == true)\n          {\n              this.drivers_Requested.push(element);\n              console.log(this.drivers_Requested);\n              this.carname = this.drivers_Requested[0].Driver_car\n              this.driver_ID = this.drivers_Requested[0].Driver_id\n              this.driver_number_of_seats = this.drivers_Requested[0].seats\n              \n              this.DriverLatLng = {\n                lat: this.drivers_Requested[0].Driver_lat,\n                lng: this.drivers_Requested[0].Driver_lng,\n              }\n\n            //  alert(this.drivers_Requested[0]);\n          }else{\n            if (Object.is(arr.length - 1, key)) {\n              this.NoDrivers = true;\n             }\n          }\n\n          //alert(JSON.stringify(element));\n          // console.log(min);\n          // console.log(element);\n          this.closeDrivers = element;\n         \n          \n        });\n      }\n\n    }catch(e){\n      this.overlay.showAlert('Error', e);\n    }\n\n  }\n\n\n\n  async chooseCard(even){\n    console.log(even);\n     this.overlay.showLoader('Please wait..');\n     await this.database.updateCArd(this.selected.name, this.selected.number, this.selected.type, this.selected.id, false)\n    this.cards.forEach(async element => {\n      console.log(element);\n       if (element.name == even.detail.value){\n      await this.database.updateCArd(element.name, element.number, element.type, element.id, true)\n       this.overlay.hideLoader();\n       }\n       })\n  }\n\nasync StartRide(){\n  try{\n  \n\n  if (this.marker1){\n  await this.map.newMap.removeMarker(this.marker1.toString());\n  this.marker1 = null;\n  console.log('removed ', this.marker1)\n  }\n\n  if (this.marker2){\n  await this.map.newMap.removeMarker(this.marker2.toString());\n  this.marker2 = null\n  console.log('removed ', this.marker2)\n  }\n\n  if (this._carmarkers){\n  this._carmarkers.forEach(async element => {\n    console.log(element, this._carmarkers)\n    await this.map.newMap.removeMarker(element);\n    console.log('removed ', element)\n    this._carmarkers = null;\n  });\n}\n\nthis.map.newMap.enableCurrentLocation(false);\n\n  this.BookRide();\n}catch(e){\n   this.overlay.showAlert('MArker Error', e)\n}\n  \n  \n}\n\n  async BookRide(){\n     await this.overlay.showLoader('');\n\n     if (this.driver_marker){\n      await this.map.newMap.removeMarker(this.driver_marker);\n      this.driver_marker = null;\n      \n      }\n  \n      if (this.rider_marker){\n      await this.map.newMap.removeMarker(this.rider_marker);\n      this.rider_marker = null;\n     \n      }\n    let driver = this.drivers_Requested[this.current_Request_Number]\n\n    const userDocRef = doc(this.firestore, `Request`, driver.Driver_id);\n\n    const unsub = onSnapshot(doc(this.firestore, \"Drivers\", driver.Driver_id), async (doc) => {\n\n     if (this.price && doc.data().onlineState == true){\n        unsub();\n        \n        await this.database.RequestRideWithRiderDetails(this.LatLng, this.destinationAddress, this.locationAddress, this.D_LatLng, driver.Driver_id, this.price, this.cash);\n        \n\n      //alert(driver);\n  //  if (driver != undefined){\n      this.currentDriver = driver;\n\n      console.log(driver);\n\n        \n          // doc.data() is never undefined for query doc snapshots\n          \n          console.log(doc.data()); \n          \n        \n    // Driver Things;\n   \n    \n     this.DriverLatLng = {\n      lat: this.drivers_Requested[this.current_Request_Number].Driver_lat,\n      lng: this.drivers_Requested[this.current_Request_Number].Driver_lng,\n    }\n\n      await this.createAndMoveMarkersOnRealtime(this.DriverLatLng, false, false);\n      this.overlay.hideLoader();\n      this.EnterSearchingStage();\n\n       \n\n\n\n            //after some time check if the next element has a driver if no request from driver, then close request and start a new request.\n            console.log('This is the driver '+ driver);\n\n\n\n               this.startTimer(driver, 20);\n           \n              this.numCalls = timer(20000).subscribe(async ()=>{\n               // await this.database.updateDriverOnlineState(driver.Driver_id)\n                // await this.database.CreateandUpdateDriver(coords, driver.Driver_id)\n                this.countDown.unsubscribe();\n                ///if the the there is still a driver in the array then call him else cancel the request\n                if (this.drivers_Requested[this.current_Request_Number+1] != null){\n                 \n                this.current_Request_Number++;\n                console.log(driver);\n                this.BookRide();\n                this.unsubscribe();\n                this.numCalls.unsubscribe();\n                console.log('requested another driver' + this.current_Request_Number);\n              }else{\n                this.numCalls.unsubscribe();\n                this.unsubscribe()\n                this.GoHome();\n                console.log('No more Drivers To Request' + this.current_Request_Number);\n                  if (this.driver_marker){\n                  await this.map.newMap.removeMarker(this.driver_marker.toString());\n                  this.driver_marker = null;\n                  }\n              \n                  if (this.rider_marker){\n                  await this.map.newMap.removeMarker(this.rider_marker.toString());\n                  this.rider_marker = null;\n                  }\n              }\n              })\n\n\n       \n\n\n          \n               this.unsubscribe = onSnapshot(userDocRef, async (doc) => {\n           // console.log(snapshot);\n            \n                  //If the driver rejects the request then close request and start a new one     \n                  if (doc.data().cancel == true){\n                    this.countDown.unsubscribe();\n                    this.numCalls.unsubscribe();\n                    ///if the the there is still a driver in the array then call him else cancel the request\n                    if (this.drivers_Requested[this.current_Request_Number+1].Driver_id){\n                      this.current_Request_Number++;\n                      this.BookRide();\n                      this.unsubscribe();\n                      console.log('requested another driver' + this.current_Request_Number);\n                      }else{\n                      this.unsubscribe();\n                      this.GoHome();\n                      console.log('No more Drivers To Request' + this.current_Request_Number);\n\n                      if (this.driver_marker){\n                        await this.map.newMap.removeMarker(this.driver_marker.toString());\n                        this.driver_marker = null;\n                        }\n                    \n                        if (this.rider_marker){\n                        await this.map.newMap.removeMarker(this.rider_marker.toString());\n                        this.rider_marker = null;\n                        }\n                      }\n\n                    //  await this.database.RestartRequestSinceReject(this.drivers_Requested[this.current_Request_Number].id)\n                    }\n\n                  if (doc.data().start == true){\n                    this.driverInfo = doc.data();\n                   \n                    if (this.canCheck) {\n                      //show rider marker going to destination on realtime with updates;\n                      this.canCheck = false;\n                      this.clearPrevMarkers()\n                    this.updateDriverSubcription = timer(4000).subscribe(async ()=>{\n                         await this.createAndMoveMarkersOnRealtime(this.D_LatLng, true, true);\n                         this.canCheck = true;\n                     })\n                    }\n                    console.log(doc.data());\n                    this.EnterDrivingToDestinationStage();\n\n                    if (doc.data().cancel == true){\n                      if (!this.riderCleared){\n                      this.overlay.showAlert('Driver', 'Cancelled');\n                      }else{\n                        this.overlay.showAlert('You', 'Cancelled');\n                      }\n\n                      this.unsubscribe();\n                      this.GoHome();\n                    }\n                  }\n\n\n                  if (doc.data().stop == true){\n                    this.unsubscribe();\n                    //this.overlay.showAlert('Ride', 'Completed');\n                    this.ClearRide();\n                    await this.database.createHistory(doc.data());\n                    if (this.countDown)\n                    this.countDown.unsubscribe();\n                  }\n              \n\n\n              \n                 \n                if (doc.data().Driver_name && doc.data().stop == false && doc.data().start == false && doc.data().cancel == false){\n                  this.driverInfo = doc.data(); \n                  this.countDown.unsubscribe();\n                  this.numCalls.unsubscribe();\n                  this.DriverLatLng = {\n                  lat: doc.data().Driver_lat,\n                  lng: doc.data().Driver_lng,\n                }\n                if (this.canCheck) {\n                  // show rider marker and driver marker coming together;\n                  this.canCheck = false;\n                  this.clearPrevMarkers();\n                  this.updateDriverSubcription = timer(4000).subscribe(async ()=>{\n                    this.canCheck = true;\n                     await this.createAndMoveMarkersOnRealtime(this.DriverLatLng, true, false);\n               })\n                }\n                \n                console.log(doc.data());\n                this.EnterTrackingStage();\n              }\n              \n      \n    \n          });\n\n          // timer(10000).subscribe(async ()=>{\n          //   this.database.PushDriverToRequest(driver);\n          //  })\n\n            }else{\n               if (this.countDown)\n               this.countDown.unsubscribe();\n                if (this.drivers_Requested[this.current_Request_Number+1] != null){\n                this.current_Request_Number++;\n                console.log(driver);\n                this.BookRide();\n                console.log('requested another driver' + this.current_Request_Number);\n              }else{\n                this.GoHome();\n                this.overlay.showAlert('Busy', 'The Requested Driver is currently Busy, Please Try again');\n                console.log('No more Drivers To Request' + this.current_Request_Number);\n              }\n            }\n\n          // }else{\n          //   this.NoDrivers = true;\n          //   this.EnterNoDriverStage();\n          // }\n\n        })\n  }\n\n\n\n\n  startTimer(driver, sec) {\n     this.countDown = interval(1000).subscribe(async ()=>{\n        await this.database.UpdateCountDown(sec, driver)\n        sec--;\n        if(sec == 0)\n        {\n          this.countDown.unsubscribe();\n        }\n      })\n }\n\n\n\n  async goBackTOAutocomplete(){\n\n    if (this.marker1){\n    await this.map.newMap.removeMarker(this.marker1);\n    this.marker1 = null;\n    }\n\n    if (this.marker2){\n    await this.map.newMap.removeMarker(this.marker2);\n    this.marker2 = null;\n    }\n\n    if (this._carmarkers){\n      this._carmarkers.forEach(async element => {\n        console.log(element, this._carmarkers)\n        await this.map.newMap.removeMarker(element);\n        console.log('removed ', element);\n      });\n    }\n\n    this.showAutocompleteModal();\n  }\n\n\n  //open the search section for autocomplete\n  async showAutocompleteModal(): Promise<void> \n  {\n    const options: ModalOptions = {\n      component: AutocompleteComponent,\n      componentProps: {\n         LatLng: this.LatLng,\n         locationAddress: this.locationAddress\n      },\n      swipeToClose: true,\n    };\n\n    // this.map.newMap.hide();\n\n    \n\n    \n  \n    const modal = await this.modalCtrl.create(options);\n    modal.present();\n\n    const { data } = await modal.onWillDismiss();\n    console.log(data);\n    // this.map.newMap.show();\n\n    \n    this.data = data;\n\n    if (data.pinOnMap) {\n      this.EnterMapPinStage();\n      this.mapPinDrag = true;\n    }\n\n    if (data.home) {\n      this.EnterBookingStage();\n      await this.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: this.LatLng\n      })\n    }\n\n    if (data.searching) {\n      this.database.AddKnownPlace(data);\n      this.destinationAddress = data.full;\n      this.actualDestination = data.whole.full;\n\n      const latLng = await this.geocode.getLatLng(data.whole.description);\n      this.D_LatLng =  {\n        lat: latLng.data.results[0].geometry.location.lat,\n        lng: latLng.data.results[0].geometry.location.lng,\n      }\n      this.getDistanceandDirections();\n    }\n\n  }\n\n  async RequestRide(dat){\n    if (!this.NoDrivers){\n      this.destinationAddress = dat.place.full;\n      this.actualDestination = dat.place.whole.full;\n\n      const latLng = await this.geocode.getLatLng(dat.place.whole.description);\n      this.D_LatLng =  {\n        lat: latLng.data.results[0].geometry.location.lat,\n        lng: latLng.data.results[0].geometry.location.lng,\n      }\n      this.getDistanceandDirections();\n    }else{\n      this.EnterNoDriverStage();\n    }\n  }\n\n\n  //reset the map to the user location view\n async resetLocation(): Promise<void>{\n  console.log(this.LatLng);\n  await this.map.newMap.setCamera({\n    animate: true,\n    animationDuration: 500,\n    zoom: 15,\n    coordinate: this.LatLng\n  });\n  this.showResetLocationButton = false;\n}\n  \n///get the distance and directions to destination\n  async getDistanceandDirections()\n  {\n\n    if (this.listen)\n    this.listen.unsubscribe();\n\n    if (this.D_LatLng.lat){\n    if (!this.NoDrivers){\n      this.EnterConfirmStage();\n    }else{\n      this.EnterNoDriverStage();\n    }\n  \n     var origin1 = new google.maps.LatLng(this.LatLng.lat, this.LatLng.lng);\n     var origin2 = new google.maps.LatLng(this.D_LatLng.lat, this.D_LatLng.lng);\n\n     if (!this.NoDrivers)\n     var request = {\n      origin: origin1,\n      destination: origin2,\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n          this.geocode.directions.route(request, async (response, status) => {\n\n             if (status == 'OK')\n             {\n               this.direction = response;\n               \n               this.distance = response.routes[0].legs[0].distance.value;\n\n               this.bounds = response.routes[0].bounds;\n\n               this.price = this.distance/10;\n\n               await this.UpdateCarMarker(this.closeDrivers);\n\n               await this.createAndAddMarkers(this.LatLng, this.D_LatLng, this.bounds);\n             }\n             else\n             {\n              this.overlay.showAlert('Direction ERROR', JSON.stringify(response))\n             }\n\n          }) \n        }else{\n          this.overlay.showAlert('Drag Map', 'Drag the map and stop on your required destination')\n        }\n  }\n\n  //create and update car markers on the map.\n  async UpdateCarMarker(element){\n    let latlng = {\n      lat: element.Driver_lat,\n      lng: element.Driver_lng\n    }\n    \n  const markers = await this.map.newMap.addMarker({ \n    coordinate: latlng,\n    iconUrl: 'https://i.ibb.co/KDy365b/hatchback.png',\n    title: 'My 2',\n  })\n\n  if (markers)\n  this._carmarkers.push(markers.toString());\n  console.log( this._carmarkers,  markers.toString());\n   \n  }\n\n//Return to Map page\n  async GoHome(){\n    await this.map.newMap.enableCurrentLocation(true);\n    this.current_Request_Number = 0\n    this.price = null;\n    this.listen = interval(5000).subscribe(async ()=>{\n      await this.checkDriversAround(this.coordinates);\n    })\n    this.EnterBookingStage();\n     await this.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: this.LatLng\n        \n      })\n  }\n\n  async GotoSupport(){\n    await this.nav.navigateForward('support');\n   \n    \n  }\n\n  async clearPrevMarkers(){\n    if (this.driver_marker){\n      await this.map.newMap.removeMarker(this.driver_marker.toString());\n      this.driver_marker = null;\n      }\n  \n      if (this.rider_marker){\n      await this.map.newMap.removeMarker(this.rider_marker.toString());\n      this.rider_marker = null;\n      }\n  }\n\n  //Return to Map page\n  async ReturnHome(){\n    this.EnterBookingStage();\n      await this.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n        coordinate: this.LatLng\n       \n      })\n  }\n\n//Cancel the Current Ride Request.....\n  async CancelRide(){\n     \n    this.overlay.showLoader('Please Wait..');\n    \n    if (this.driver_marker){\n    await this.map.newMap.removeMarker(this.driver_marker.toString());\n    this.driver_marker = null;\n    }\n\n    if (this.rider_marker){\n    await this.map.newMap.removeMarker(this.rider_marker.toString());\n    this.rider_marker = null;\n    }\n\n    \n\n    let coords = {\n      coords: {latitude: this.currentDriver.Driver_lat, longitude: this.currentDriver.Driver_lng},\n    }\n    this.unsubscribe();\n    this.numCalls.unsubscribe();\n    this.riderCleared = true;\n    await this.database.cancelRide(this.currentDriver.Driver_id)\n    await this.map.newMap.enableCurrentLocation(true);\n    this.current_Request_Number = 0\n    this.price = null;\n    this.listen = interval(5000).subscribe(async ()=>{\n      await this.checkDriversAround(this.coordinates);\n    })\n    this.EnterBookingStage();\n    this.overlay.hideLoader();\n      await this.map.newMap.setCamera({\n        animate: true,\n        animationDuration: 500,\n        zoom: 15,\n      coordinate: this.LatLng\n      })\n  }\n\n///Clear the ride that has already started\n  async ClearRide(){\n    this.EnterBookingStage();\n    if (this.driver_marker){\n    await this.map.newMap.removeMarker(this.driver_marker);\n    this.driver_marker = null;\n    }\n    if (this.rider_marker){\n    await this.map.newMap.removeMarker(this.rider_marker);\n    this.rider_marker = null;\n    }\n\n    await this.map.newMap.enableCurrentLocation(true);\n    this.current_Request_Number = 0\n    this.price = null;\n\n    this.listen = interval(5000).subscribe(async ()=>{\n      await this.checkDriversAround(this.coordinates);\n    })\n    await this.map.newMap.setCamera({\n      animate: true,\n      animationDuration: 500,\n      zoom: 15,\n      coordinate: this.LatLng,\n      bearing: 0\n    })\n   \n  }\n\n\n  async CallDriver(){\n      \n  }\n\n\n  ///create markers and possition them in the view of the user\n  async createAndMoveMarkersOnRealtime(otherLatLng, state, isDestination){\n\nvar origin1 = new google.maps.LatLng(this.LatLng.lat, this.LatLng.lng);\nvar origin2 = new google.maps.LatLng(otherLatLng.lat, otherLatLng.lng);\n\nvar request = {\norigin: origin2,\ndestination: origin1,\ntravelMode: google.maps.TravelMode.DRIVING,\n};\n    this.geocode.directions.route(request, async (response, status) => {\n       if (status == 'OK')\n       {\n         this.bounds = response.routes[0].bounds;\n\n         this.duration = response.routes[0].legs[0].duration.text;\n  \n   let markerUrl;\n  if (!isDestination){\n    markerUrl = 'https://i.ibb.co/KDy365b/hatchback.png'\n  }else{\n    markerUrl = 'https://i.ibb.co/bWx9V64/favourite.png'\n  }\n\n   this.driver_marker = await this.map.newMap.addMarker({\n     coordinate: otherLatLng,\n       iconUrl: markerUrl,\n       title: 'My 2',\n  });\n\n  this.rider_marker = await this.map.newMap.addMarker({\n    coordinate: this.LatLng,\n     iconUrl: \"https://i.ibb.co/N9LXGk3/home-1.png\",\n     title: 'My 2',\n});\n\n\n    const locs = [\n     {\n       geoCode: {\n         latitude: this.LatLng.lat,\n         longitude: this.LatLng.lng\n       }\n     },\n     {\n       geoCode: {\n         latitude: otherLatLng.lat,\n         longitude: otherLatLng.lng\n       }\n     }\n   ];\n\n   let go = {\n     lat: (await this.map.CalculateCenter(locs)).latitude,\n     lng: (await this.map.CalculateCenter(locs)).longitude\n   }\n\n   if (state){\n    await this.map.newMap.setPadding({\n      top: 0,\n      left:0,\n      right:0,\n      bottom: 600\n    })\n   }\n   \n\n   let mapDim = {\n     height: this.mapRef.nativeElement.offsetHeight/2,\n     width: this.mapRef.nativeElement.offsetWidth\n   }\n     await this.map.newMap.setCamera({\n       animate: true,\n       animationDuration: 500,\n       zoom: await this.map.getBoundsZoomLevel(this.bounds, mapDim),\n       coordinate: go,\n      bearing: 0\n     })\n\n     this.canCheck = true;\n\n    }\n    else\n    {\n     this.overlay.showAlert('Direction ERROR', JSON.stringify(response))\n    }\n\n })\n \n  }\n\n\n  ///create markers and possition them in the view of the user\n  async createAndAddMarkers(loc, des, bounds){\n\n    this.marker1 = await this.map.newMap.addMarker({\n      coordinate: loc,\n       iconUrl: \"https://i.ibb.co/N9LXGk3/home-1.png\",\n       title: 'My 2',\n  });\n\n  this.marker2 = await this.map.newMap.addMarker({\n   coordinate: des,\n     iconUrl: 'https://i.ibb.co/bWx9V64/favourite.png',\n     title: 'My 2',\n});\n\n\n\n       const locs = [\n        {\n          geoCode: {\n            latitude: loc.lat,\n            longitude: loc.lng\n          }\n        },\n        {\n          geoCode: {\n            latitude: des.lat,\n            longitude: des.lng\n          }\n        }\n      ];\n\n       \n\n      let go = {\n        lat: (await this.map.CalculateCenter(locs)).latitude,\n        lng: (await this.map.CalculateCenter(locs)).longitude\n      }\n\n      let mapDim = {\n        height: this.mapRef.nativeElement.offsetHeight/2,\n        width: this.mapRef.nativeElement.offsetWidth\n      }\n        await this.map.newMap.setCamera({\n          animate: true,\n          animationDuration: 500,\n          zoom: await this.map.getBoundsZoomLevel(bounds, mapDim),\n          coordinate: go,\n          bearing: 0\n        })\n  }\n\n\n  \n\n  EnterBookingStage() \n  {\n    this.bookingStage = true\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n\n  EnterMapPinStage() {\n    this.bookingStage = false\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = true;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterConfirmStage() {\n    this.bookingStage = false;\n    this.confirmStage = true;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterSearchingStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = true;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterNoDriverStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.noDriverStage = true;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterTrackingStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = true;\n    this.searchingStage = false;\n    this.noDriverStage = false;\n    this.mapPinStage = false;\n    this.drivingToDestinationStage = false;\n  }\n\n  EnterDrivingToDestinationStage() {\n    this.bookingStage = false;\n    this.confirmStage = false;\n    this.trackingStage = false;\n    this.searchingStage = false;\n    this.mapPinStage = false;\n    this.noDriverStage = false;\n    this.drivingToDestinationStage = true;\n  }\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}