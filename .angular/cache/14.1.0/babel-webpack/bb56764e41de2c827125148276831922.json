{"ast":null,"code":"import _asyncToGenerator from \"/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { isPlatform, ModalController, NavController } from '@ionic/angular';\nimport { OtpComponent } from '../otp/otp.component';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from '../../environments/environment';\nimport { OverlayService } from '../services/overlay.service';\nimport { GoogleAuth } from '@codetrix-studio/capacitor-google-auth';\nimport { deleteUser, GoogleAuthProvider, signInWithCredential } from '@angular/fire/auth';\nimport { Auth } from '@angular/fire/auth/';\nimport { StatusBar } from '@capacitor/status-bar';\nimport { AvatarService } from '../services/avatar.service';\nimport { SplashScreen } from '@capacitor/splash-screen';\nlet LoginPage = class LoginPage {\n  constructor(modalCtrl, auth, router, nav, authY, avatar, overlay) {\n    this.modalCtrl = modalCtrl;\n    this.auth = auth;\n    this.router = router;\n    this.nav = nav;\n    this.authY = authY;\n    this.avatar = avatar;\n    this.overlay = overlay;\n    this.CountryJson = environment.CountryJson;\n    this.flag = \"https://cdn.kcak11.com/CountryFlags/countries/ng.svg\";\n    this.slideOpts = {\n      initialSlide: 0,\n      speed: 300,\n      autoplay: true\n    };\n\n    if (!isPlatform('capacitor')) {\n      GoogleAuth.initialize();\n    }\n\n    let country = 'Nigeria';\n    this.CountryCode = '+1';\n    this.numberT = '+1';\n  }\n\n  HideSplash() {\n    return _asyncToGenerator(function* () {\n      yield SplashScreen.hide();\n    })();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.form = new FormGroup({\n        phone: new FormControl(null, {\n          validators: [Validators.required, Validators.minLength(10), Validators.maxLength(10)]\n        })\n      }); // this.router.navigateByUrl('details');\n      // this.show();\n    })();\n  }\n\n  countryCodeChange($event) {\n    console.log($event.detail.value.toString());\n    this.CountryCode = '';\n    this.numberT = $event.detail.value.toString();\n  }\n\n  Show() {\n    return _asyncToGenerator(function* () {\n      yield StatusBar.setOverlaysWebView({\n        overlay: false\n      });\n    })();\n  }\n\n  Hide() {\n    return _asyncToGenerator(function* () {\n      yield StatusBar.setOverlaysWebView({\n        overlay: true\n      });\n    })();\n  }\n\n  signIn() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        if (!_this2.form.valid) {\n          _this2.form.markAllAsTouched();\n\n          return;\n        }\n\n        console.log(_this2.form.value);\n        _this2.approve2 = true;\n        const response = yield _this2.auth.signInWithPhoneNumber(_this2.numberT + _this2.form.value.phone);\n        _this2.approve2 = false;\n        const options = {\n          component: OtpComponent,\n          componentProps: {\n            phone: _this2.form.value.phone,\n            countryCode: _this2.numberT\n          },\n          swipeToClose: true\n        };\n\n        const modal = _this2.modalCtrl.create(options);\n\n        (yield modal).present();\n        const data = (yield modal).onWillDismiss();\n\n        _this2.authY.onAuthStateChanged( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (user) {\n            if (!user) {\n              _this2.router.navigateByUrl('details');\n            } else {\n              _this2.router.navigateByUrl('home');\n            }\n\n            _this2.overlay.hideLoader();\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n\n        console.log(data);\n      } catch (e) {\n        console.log(e);\n\n        _this2.overlay.showAlert('Error', JSON.stringify(e));\n\n        _this2.approve2 = false;\n      }\n    })();\n  }\n\n  loginWithGoogle() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.approve = true;\n        let googleUser = yield GoogleAuth.signIn();\n        const credential = GoogleAuthProvider.credential(googleUser.authentication.idToken);\n        const sToken = yield signInWithCredential(_this3.authY, credential);\n\n        if (sToken.user.phoneNumber) {\n          const result = yield _this3.avatar.createUser(sToken.user.displayName, sToken.user.email, sToken.user.photoURL || '', sToken.user.phoneNumber || 94909220, _this3.authY.currentUser.uid);\n          yield _this3.avatar.createCard('Cash', 0, 'cash', 'None');\n\n          _this3.router.navigateByUrl('home');\n        } else {\n          yield deleteUser(_this3.authY.currentUser);\n          let navigationExtras = {\n            queryParams: {\n              details: sToken\n            }\n          };\n\n          _this3.nav.navigateForward('phone-detail', navigationExtras);\n        }\n\n        console.log(sToken);\n        _this3.approve = false;\n      } catch (e) {\n        _this3.overlay.showAlert('Error', JSON.stringify(e));\n\n        _this3.approve = false;\n      }\n    })();\n  }\n\n};\n\nLoginPage.ctorParameters = () => [{\n  type: ModalController\n}, {\n  type: AuthService\n}, {\n  type: Router\n}, {\n  type: NavController\n}, {\n  type: Auth\n}, {\n  type: AvatarService\n}, {\n  type: OverlayService\n}];\n\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginPage);\nexport { LoginPage };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","Router","isPlatform","ModalController","NavController","OtpComponent","AuthService","environment","OverlayService","GoogleAuth","deleteUser","GoogleAuthProvider","signInWithCredential","Auth","StatusBar","AvatarService","SplashScreen","LoginPage","constructor","modalCtrl","auth","router","nav","authY","avatar","overlay","CountryJson","initialSlide","speed","autoplay","initialize","country","CountryCode","numberT","HideSplash","hide","ngOnInit","form","phone","validators","required","minLength","maxLength","countryCodeChange","$event","console","log","detail","value","toString","Show","setOverlaysWebView","Hide","signIn","valid","markAllAsTouched","approve2","response","signInWithPhoneNumber","options","component","componentProps","countryCode","swipeToClose","modal","create","present","data","onWillDismiss","onAuthStateChanged","user","navigateByUrl","hideLoader","e","showAlert","JSON","stringify","loginWithGoogle","approve","googleUser","credential","authentication","idToken","sToken","phoneNumber","result","createUser","displayName","email","photoURL","currentUser","uid","createCard","navigationExtras","queryParams","details","navigateForward","selector","template"],"sourceRoot":"","sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/src/app/login/login.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { isPlatform, ModalController, ModalOptions, NavController } from '@ionic/angular';\nimport { OtpComponent } from '../otp/otp.component';\nimport { AuthService } from '../services/auth.service';\nimport { environment } from '../../environments/environment';\nimport { OverlayService } from '../services/overlay.service';\nimport { GoogleAuth } from '@codetrix-studio/capacitor-google-auth';\nimport { deleteUser, GoogleAuthProvider, signInWithCredential } from '@angular/fire/auth';\nimport { Auth } from '@angular/fire/auth/';\nimport { StatusBar, Style } from '@capacitor/status-bar';\nimport { AvatarService } from '../services/avatar.service';\nimport { SplashScreen } from '@capacitor/splash-screen';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  form: FormGroup;\n  CountryCode: any;\n  CountryJson = environment.CountryJson;\n  flag: any = \"https://cdn.kcak11.com/CountryFlags/countries/ng.svg\";\n  \n  user: any;\n  approve: boolean;\n  approve2: boolean;\n  \n\n  slideOpts = {\n    initialSlide: 0,\n    speed: 300,\n    autoplay:true\n  };\n  numberT: string;\n  constructor(\n    private modalCtrl: ModalController,\n    private auth: AuthService,\n    private router: Router,\n    private nav: NavController,\n    private authY: Auth,\n    private avatar: AvatarService,\n    private overlay: OverlayService,\n  ) \n  { \n    if (!isPlatform('capacitor')){\n      GoogleAuth.initialize();\n     }\n     let country = 'Nigeria'\n     this.CountryCode = '+1'\n     this.numberT = '+1'\n  }\n\n  async HideSplash()\n  {\n    await SplashScreen.hide();\n  }\n\n  \n\n  async ngOnInit() {\n  \n    this.form = new FormGroup({\n      phone: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(10), Validators.maxLength(10)]\n      }),\n    });\n\n    // this.router.navigateByUrl('details');\n   // this.show();\n  }\n\n  countryCodeChange($event) {\n    console.log($event.detail.value.toString());\n    this.CountryCode = '';\n    this.numberT = $event.detail.value.toString();\n  }\n\n  async Show(){\n    await StatusBar.setOverlaysWebView({ overlay: false });\n   \n  }\n\n  async Hide(){\n    await StatusBar.setOverlaysWebView({ overlay: true });\n   \n  }\n\n\n\n  async signIn() {\n    try {\n      if (!this.form.valid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      console.log(this.form.value);\n      this.approve2 = true;\n      const response = await this.auth.signInWithPhoneNumber(this.numberT + this.form.value.phone);\n      this.approve2 = false;\n      const options: ModalOptions = {\n        component: OtpComponent,\n        componentProps: {\n          phone: this.form.value.phone,\n          countryCode: this.numberT,\n        },\n        swipeToClose: true\n      };\n      const modal = this.modalCtrl.create(options);\n      (await modal).present();\n      const data: any = (await modal).onWillDismiss();\n      this.authY.onAuthStateChanged(async (user)=>{\n        if (!user){\n       this.router.navigateByUrl('details'); \n        }else{\n          this.router.navigateByUrl('home'); \n        }  \n       this.overlay.hideLoader();\n      })\n       console.log(data);\n    } catch(e) {\n      console.log(e);\n      this.overlay.showAlert('Error', JSON.stringify(e));\n      this.approve2 = false;\n    }\n  }\n\n  async loginWithGoogle(){\n\n    try {\n\n     this.approve = true;\n\n     let googleUser = await GoogleAuth.signIn();\n   \n     const credential = GoogleAuthProvider.credential(googleUser.authentication.idToken);\n\n     const sToken = await signInWithCredential(this.authY, credential);\n     if (sToken.user.phoneNumber){\n     const result = await this.avatar.createUser(sToken.user.displayName, sToken.user.email, sToken.user.photoURL || '', sToken.user.phoneNumber|| 94909220, this.authY.currentUser.uid)\n     await this.avatar.createCard('Cash', 0, 'cash', 'None')\n     this.router.navigateByUrl('home');\n     }else{\n      await deleteUser(this.authY.currentUser)\n      let navigationExtras: NavigationExtras = {\n        queryParams: {\n            details: sToken,\n        }\n     };\n      this.nav.navigateForward('phone-detail', navigationExtras);\n     }\n\n\n     console.log(sToken);\n    \n      \n      this.approve = false;\n\n  } catch(e) {\n    this.overlay.showAlert('Error', JSON.stringify(e));\n    this.approve = false;\n  }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}