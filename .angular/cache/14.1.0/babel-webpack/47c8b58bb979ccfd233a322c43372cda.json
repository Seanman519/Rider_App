{"ast":null,"code":"import _asyncToGenerator from \"/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Capacitor } from '@capacitor/core';\nimport { CapacitorGoogleMaps } from './implementation';\n\nclass MapCustomElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    if (Capacitor.getPlatform() == 'ios') {\n      this.style.overflow = 'scroll';\n      this.style['-webkit-overflow-scrolling'] = 'touch';\n      const overflowDiv = document.createElement('div');\n      overflowDiv.style.height = '200%';\n      this.appendChild(overflowDiv);\n    }\n  }\n\n}\n\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n  constructor(id) {\n    this.element = null;\n\n    this.handleScrollEvent = () => this.updateMapBounds();\n\n    this.id = id;\n  }\n  /**\n   * Creates a new instance of a Google Map\n   * @param options\n   * @param callback\n   * @returns GoogleMap\n   */\n\n\n  static create(options, callback) {\n    return _asyncToGenerator(function* () {\n      const newMap = new GoogleMap(options.id);\n\n      if (!options.element) {\n        throw new Error('container element is required');\n      }\n\n      if (options.config.androidLiteMode === undefined) {\n        options.config.androidLiteMode = false;\n      }\n\n      newMap.element = options.element;\n      newMap.element.dataset.internalId = options.id;\n      const elementBounds = options.element.getBoundingClientRect();\n      options.config.width = elementBounds.width;\n      options.config.height = elementBounds.height;\n      options.config.x = elementBounds.x;\n      options.config.y = elementBounds.y;\n      options.config.devicePixelRatio = window.devicePixelRatio;\n\n      if (Capacitor.getPlatform() == 'android') {\n        newMap.initScrolling();\n      }\n\n      if (Capacitor.isNativePlatform()) {\n        options.element = {};\n      }\n\n      yield CapacitorGoogleMaps.create(options);\n\n      if (callback) {\n        const onMapReadyListener = yield CapacitorGoogleMaps.addListener('onMapReady', data => {\n          if (data.mapId == newMap.id) {\n            callback(data);\n            onMapReadyListener.remove();\n          }\n        });\n      }\n\n      return newMap;\n    })();\n  }\n  /**\n   * Enable marker clustering\n   *\n   * @returns void\n   */\n\n\n  enableClustering() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableClustering({\n        id: _this.id\n      });\n    })();\n  }\n  /**\n   * Disable marker clustering\n   *\n   * @returns void\n   */\n\n\n  disableClustering() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.disableClustering({\n        id: _this2.id\n      });\n    })();\n  }\n  /**\n   * Adds a marker to the map\n   *\n   * @param marker\n   * @returns created marker id\n   */\n\n\n  addMarker(marker) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarker({\n        id: _this3.id,\n        marker\n      });\n      return res.id;\n    })();\n  }\n  /**\n   * Adds multiple markers to the map\n   *\n   * @param markers\n   * @returns array of created marker IDs\n   */\n\n\n  addMarkers(markers) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield CapacitorGoogleMaps.addMarkers({\n        id: _this4.id,\n        markers\n      });\n      return res.ids;\n    })();\n  }\n  /**\n   * Remove marker from the map\n   *\n   * @param id id of the marker to remove from the map\n   * @returns\n   */\n\n\n  removeMarker(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarker({\n        id: _this5.id,\n        markerId: id\n      });\n    })();\n  }\n  /**\n   * Remove markers from the map\n   *\n   * @param ids array of ids to remove from the map\n   * @returns\n   */\n\n\n  removeMarkers(ids) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.removeMarkers({\n        id: _this6.id,\n        markerIds: ids\n      });\n    })();\n  }\n  /**\n   * Destroy the current instance of the map\n   */\n\n\n  destroy() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (Capacitor.getPlatform() == 'android') {\n        _this7.disableScrolling();\n      }\n\n      _this7.removeAllMapListeners();\n\n      return CapacitorGoogleMaps.destroy({\n        id: _this7.id\n      });\n    })();\n  }\n  /**\n   * Update the map camera configuration\n   *\n   * @param config\n   * @returns\n   */\n\n\n  setCamera(config) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setCamera({\n        id: _this8.id,\n        config\n      });\n    })();\n  }\n  /**\n   * Sets the type of map tiles that should be displayed.\n   *\n   * @param mapType\n   * @returns\n   */\n\n\n  setMapType(mapType) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setMapType({\n        id: _this9.id,\n        mapType\n      });\n    })();\n  }\n  /**\n   * Sets whether indoor maps are shown, where available.\n   *\n   * @param enabled\n   * @returns\n   */\n\n\n  enableIndoorMaps(enabled) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableIndoorMaps({\n        id: _this10.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Controls whether the map is drawing traffic data, if available.\n   *\n   * @param enabled\n   * @returns\n   */\n\n\n  enableTrafficLayer(enabled) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableTrafficLayer({\n        id: _this11.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Show accessibility elements for overlay objects, such as Marker and Polyline.\n   *\n   * Only available on iOS.\n   *\n   * @param enabled\n   * @returns\n   */\n\n\n  enableAccessibilityElements(enabled) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableAccessibilityElements({\n        id: _this12.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set whether the My Location dot and accuracy circle is enabled.\n   *\n   * @param enabled\n   * @returns\n   */\n\n\n  enableCurrentLocation(enabled) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.enableCurrentLocation({\n        id: _this13.id,\n        enabled\n      });\n    })();\n  }\n  /**\n   * Set padding on the 'visible' region of the view.\n   *\n   * @param padding\n   * @returns\n   */\n\n\n  setPadding(padding) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.setPadding({\n        id: _this14.id,\n        padding\n      });\n    })();\n  }\n  /**\n   * Get the map's current viewport latitude and longitude bounds.\n   *\n   * @returns {LatLngBounds}\n   */\n\n\n  getMapBounds() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      return CapacitorGoogleMaps.getMapBounds({\n        id: _this15.id\n      });\n    })();\n  }\n\n  initScrolling() {\n    const ionContents = document.getElementsByTagName('ion-content'); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (let i = 0; i < ionContents.length; i++) {\n      ionContents[i].scrollEvents = true;\n    }\n\n    window.addEventListener('ionScroll', this.handleScrollEvent);\n    window.addEventListener('scroll', this.handleScrollEvent);\n    window.addEventListener('resize', this.handleScrollEvent);\n\n    if (screen.orientation) {\n      screen.orientation.addEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    } else {\n      window.addEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 500);\n      });\n    }\n  }\n\n  disableScrolling() {\n    window.removeEventListener('ionScroll', this.handleScrollEvent);\n    window.removeEventListener('scroll', this.handleScrollEvent);\n    window.removeEventListener('resize', this.handleScrollEvent);\n\n    if (screen.orientation) {\n      screen.orientation.removeEventListener('change', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    } else {\n      window.removeEventListener('orientationchange', () => {\n        setTimeout(this.updateMapBounds, 1000);\n      });\n    }\n  }\n\n  updateMapBounds() {\n    if (this.element) {\n      const mapRect = this.element.getBoundingClientRect();\n      CapacitorGoogleMaps.onScroll({\n        id: this.id,\n        mapBounds: {\n          x: mapRect.x,\n          y: mapRect.y,\n          width: mapRect.width,\n          height: mapRect.height\n        }\n      });\n    }\n  }\n  /*\n  private findContainerElement(): HTMLElement | null {\n    if (!this.element) {\n      return null;\n    }\n       let parentElement = this.element.parentElement;\n    while (parentElement !== null) {\n      if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n        return parentElement;\n      }\n         parentElement = parentElement.parentElement;\n    }\n       return null;\n  }\n  */\n\n  /**\n   * Set the event listener on the map for 'onCameraIdle' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnCameraIdleListener(callback) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this16.onCameraIdleListener) {\n        _this16.onCameraIdleListener.remove();\n      }\n\n      if (callback) {\n        _this16.onCameraIdleListener = yield CapacitorGoogleMaps.addListener('onCameraIdle', _this16.generateCallback(callback));\n      } else {\n        _this16.onCameraIdleListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onBoundsChanged' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnBoundsChangedListener(callback) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this17.onBoundsChangedListener) {\n        _this17.onBoundsChangedListener.remove();\n      }\n\n      if (callback) {\n        _this17.onBoundsChangedListener = yield CapacitorGoogleMaps.addListener('onBoundsChanged', _this17.generateCallback(callback));\n      } else {\n        _this17.onBoundsChangedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onCameraMoveStarted' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnCameraMoveStartedListener(callback) {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this18.onCameraMoveStartedListener) {\n        _this18.onCameraMoveStartedListener.remove();\n      }\n\n      if (callback) {\n        _this18.onCameraMoveStartedListener = yield CapacitorGoogleMaps.addListener('onCameraMoveStarted', _this18.generateCallback(callback));\n      } else {\n        _this18.onCameraMoveStartedListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnClusterClickListener(callback) {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this19.onClusterClickListener) {\n        _this19.onClusterClickListener.remove();\n      }\n\n      if (callback) {\n        _this19.onClusterClickListener = yield CapacitorGoogleMaps.addListener('onClusterClick', _this19.generateCallback(callback));\n      } else {\n        _this19.onClusterClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnClusterInfoWindowClickListener(callback) {\n    var _this20 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this20.onClusterInfoWindowClickListener) {\n        _this20.onClusterInfoWindowClickListener.remove();\n      }\n\n      if (callback) {\n        _this20.onClusterInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', _this20.generateCallback(callback));\n      } else {\n        _this20.onClusterInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onInfoWindowClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnInfoWindowClickListener(callback) {\n    var _this21 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this21.onInfoWindowClickListener) {\n        _this21.onInfoWindowClickListener.remove();\n      }\n\n      if (callback) {\n        _this21.onInfoWindowClickListener = yield CapacitorGoogleMaps.addListener('onInfoWindowClick', _this21.generateCallback(callback));\n      } else {\n        _this21.onInfoWindowClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMapClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnMapClickListener(callback) {\n    var _this22 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this22.onMapClickListener) {\n        _this22.onMapClickListener.remove();\n      }\n\n      if (callback) {\n        _this22.onMapClickListener = yield CapacitorGoogleMaps.addListener('onMapClick', _this22.generateCallback(callback));\n      } else {\n        _this22.onMapClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMarkerClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnMarkerClickListener(callback) {\n    var _this23 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this23.onMarkerClickListener) {\n        _this23.onMarkerClickListener.remove();\n      }\n\n      if (callback) {\n        _this23.onMarkerClickListener = yield CapacitorGoogleMaps.addListener('onMarkerClick', _this23.generateCallback(callback));\n      } else {\n        _this23.onMarkerClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationButtonClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnMyLocationButtonClickListener(callback) {\n    var _this24 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this24.onMyLocationButtonClickListener) {\n        _this24.onMyLocationButtonClickListener.remove();\n      }\n\n      if (callback) {\n        _this24.onMyLocationButtonClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationButtonClick', _this24.generateCallback(callback));\n      } else {\n        _this24.onMyLocationButtonClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Set the event listener on the map for 'onMyLocationClick' events.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  setOnMyLocationClickListener(callback) {\n    var _this25 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this25.onMyLocationClickListener) {\n        _this25.onMyLocationClickListener.remove();\n      }\n\n      if (callback) {\n        _this25.onMyLocationClickListener = yield CapacitorGoogleMaps.addListener('onMyLocationClick', _this25.generateCallback(callback));\n      } else {\n        _this25.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n  /**\n   * Remove all event listeners on the map.\n   *\n   * @param callback\n   * @returns\n   */\n\n\n  removeAllMapListeners() {\n    var _this26 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this26.onBoundsChangedListener) {\n        _this26.onBoundsChangedListener.remove();\n\n        _this26.onBoundsChangedListener = undefined;\n      }\n\n      if (_this26.onCameraIdleListener) {\n        _this26.onCameraIdleListener.remove();\n\n        _this26.onCameraIdleListener = undefined;\n      }\n\n      if (_this26.onCameraMoveStartedListener) {\n        _this26.onCameraMoveStartedListener.remove();\n\n        _this26.onCameraMoveStartedListener = undefined;\n      }\n\n      if (_this26.onClusterClickListener) {\n        _this26.onClusterClickListener.remove();\n\n        _this26.onClusterClickListener = undefined;\n      }\n\n      if (_this26.onClusterInfoWindowClickListener) {\n        _this26.onClusterInfoWindowClickListener.remove();\n\n        _this26.onClusterInfoWindowClickListener = undefined;\n      }\n\n      if (_this26.onInfoWindowClickListener) {\n        _this26.onInfoWindowClickListener.remove();\n\n        _this26.onInfoWindowClickListener = undefined;\n      }\n\n      if (_this26.onMapClickListener) {\n        _this26.onMapClickListener.remove();\n\n        _this26.onMapClickListener = undefined;\n      }\n\n      if (_this26.onMarkerClickListener) {\n        _this26.onMarkerClickListener.remove();\n\n        _this26.onMarkerClickListener = undefined;\n      }\n\n      if (_this26.onMyLocationButtonClickListener) {\n        _this26.onMyLocationButtonClickListener.remove();\n\n        _this26.onMyLocationButtonClickListener = undefined;\n      }\n\n      if (_this26.onMyLocationClickListener) {\n        _this26.onMyLocationClickListener.remove();\n\n        _this26.onMyLocationClickListener = undefined;\n      }\n    })();\n  }\n\n  generateCallback(callback) {\n    const mapId = this.id;\n    return data => {\n      if (data.mapId == mapId) {\n        callback(data);\n      }\n    };\n  }\n\n}","map":{"version":3,"names":["Capacitor","CapacitorGoogleMaps","MapCustomElement","HTMLElement","constructor","connectedCallback","getPlatform","style","overflow","overflowDiv","document","createElement","height","appendChild","customElements","define","GoogleMap","id","element","handleScrollEvent","updateMapBounds","create","options","callback","newMap","Error","config","androidLiteMode","undefined","dataset","internalId","elementBounds","getBoundingClientRect","width","x","y","devicePixelRatio","window","initScrolling","isNativePlatform","onMapReadyListener","addListener","data","mapId","remove","enableClustering","disableClustering","addMarker","marker","res","addMarkers","markers","ids","removeMarker","markerId","removeMarkers","markerIds","destroy","disableScrolling","removeAllMapListeners","setCamera","setMapType","mapType","enableIndoorMaps","enabled","enableTrafficLayer","enableAccessibilityElements","enableCurrentLocation","setPadding","padding","getMapBounds","ionContents","getElementsByTagName","i","length","scrollEvents","addEventListener","screen","orientation","setTimeout","removeEventListener","mapRect","onScroll","mapBounds","setOnCameraIdleListener","onCameraIdleListener","generateCallback","setOnBoundsChangedListener","onBoundsChangedListener","setOnCameraMoveStartedListener","onCameraMoveStartedListener","setOnClusterClickListener","onClusterClickListener","setOnClusterInfoWindowClickListener","onClusterInfoWindowClickListener","setOnInfoWindowClickListener","onInfoWindowClickListener","setOnMapClickListener","onMapClickListener","setOnMarkerClickListener","onMarkerClickListener","setOnMyLocationButtonClickListener","onMyLocationButtonClickListener","setOnMyLocationClickListener","onMyLocationClickListener"],"sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@capacitor/google-maps/dist/esm/map.js"],"sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        if (Capacitor.getPlatform() == 'ios') {\n            this.style.overflow = 'scroll';\n            this.style['-webkit-overflow-scrolling'] = 'touch';\n            const overflowDiv = document.createElement('div');\n            overflowDiv.style.height = '200%';\n            this.appendChild(overflowDiv);\n        }\n    }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n    constructor(id) {\n        this.element = null;\n        this.handleScrollEvent = () => this.updateMapBounds();\n        this.id = id;\n    }\n    /**\n     * Creates a new instance of a Google Map\n     * @param options\n     * @param callback\n     * @returns GoogleMap\n     */\n    static async create(options, callback) {\n        const newMap = new GoogleMap(options.id);\n        if (!options.element) {\n            throw new Error('container element is required');\n        }\n        if (options.config.androidLiteMode === undefined) {\n            options.config.androidLiteMode = false;\n        }\n        newMap.element = options.element;\n        newMap.element.dataset.internalId = options.id;\n        const elementBounds = options.element.getBoundingClientRect();\n        options.config.width = elementBounds.width;\n        options.config.height = elementBounds.height;\n        options.config.x = elementBounds.x;\n        options.config.y = elementBounds.y;\n        options.config.devicePixelRatio = window.devicePixelRatio;\n        if (Capacitor.getPlatform() == 'android') {\n            newMap.initScrolling();\n        }\n        if (Capacitor.isNativePlatform()) {\n            options.element = {};\n        }\n        await CapacitorGoogleMaps.create(options);\n        if (callback) {\n            const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data) => {\n                if (data.mapId == newMap.id) {\n                    callback(data);\n                    onMapReadyListener.remove();\n                }\n            });\n        }\n        return newMap;\n    }\n    /**\n     * Enable marker clustering\n     *\n     * @returns void\n     */\n    async enableClustering() {\n        return CapacitorGoogleMaps.enableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Disable marker clustering\n     *\n     * @returns void\n     */\n    async disableClustering() {\n        return CapacitorGoogleMaps.disableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Adds a marker to the map\n     *\n     * @param marker\n     * @returns created marker id\n     */\n    async addMarker(marker) {\n        const res = await CapacitorGoogleMaps.addMarker({\n            id: this.id,\n            marker,\n        });\n        return res.id;\n    }\n    /**\n     * Adds multiple markers to the map\n     *\n     * @param markers\n     * @returns array of created marker IDs\n     */\n    async addMarkers(markers) {\n        const res = await CapacitorGoogleMaps.addMarkers({\n            id: this.id,\n            markers,\n        });\n        return res.ids;\n    }\n    /**\n     * Remove marker from the map\n     *\n     * @param id id of the marker to remove from the map\n     * @returns\n     */\n    async removeMarker(id) {\n        return CapacitorGoogleMaps.removeMarker({\n            id: this.id,\n            markerId: id,\n        });\n    }\n    /**\n     * Remove markers from the map\n     *\n     * @param ids array of ids to remove from the map\n     * @returns\n     */\n    async removeMarkers(ids) {\n        return CapacitorGoogleMaps.removeMarkers({\n            id: this.id,\n            markerIds: ids,\n        });\n    }\n    /**\n     * Destroy the current instance of the map\n     */\n    async destroy() {\n        if (Capacitor.getPlatform() == 'android') {\n            this.disableScrolling();\n        }\n        this.removeAllMapListeners();\n        return CapacitorGoogleMaps.destroy({\n            id: this.id,\n        });\n    }\n    /**\n     * Update the map camera configuration\n     *\n     * @param config\n     * @returns\n     */\n    async setCamera(config) {\n        return CapacitorGoogleMaps.setCamera({\n            id: this.id,\n            config,\n        });\n    }\n    /**\n     * Sets the type of map tiles that should be displayed.\n     *\n     * @param mapType\n     * @returns\n     */\n    async setMapType(mapType) {\n        return CapacitorGoogleMaps.setMapType({\n            id: this.id,\n            mapType,\n        });\n    }\n    /**\n     * Sets whether indoor maps are shown, where available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableIndoorMaps(enabled) {\n        return CapacitorGoogleMaps.enableIndoorMaps({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Controls whether the map is drawing traffic data, if available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableTrafficLayer(enabled) {\n        return CapacitorGoogleMaps.enableTrafficLayer({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Show accessibility elements for overlay objects, such as Marker and Polyline.\n     *\n     * Only available on iOS.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableAccessibilityElements(enabled) {\n        return CapacitorGoogleMaps.enableAccessibilityElements({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set whether the My Location dot and accuracy circle is enabled.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableCurrentLocation(enabled) {\n        return CapacitorGoogleMaps.enableCurrentLocation({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set padding on the 'visible' region of the view.\n     *\n     * @param padding\n     * @returns\n     */\n    async setPadding(padding) {\n        return CapacitorGoogleMaps.setPadding({\n            id: this.id,\n            padding,\n        });\n    }\n    /**\n     * Get the map's current viewport latitude and longitude bounds.\n     *\n     * @returns {LatLngBounds}\n     */\n    async getMapBounds() {\n        return CapacitorGoogleMaps.getMapBounds({\n            id: this.id,\n        });\n    }\n    initScrolling() {\n        const ionContents = document.getElementsByTagName('ion-content');\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < ionContents.length; i++) {\n            ionContents[i].scrollEvents = true;\n        }\n        window.addEventListener('ionScroll', this.handleScrollEvent);\n        window.addEventListener('scroll', this.handleScrollEvent);\n        window.addEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.addEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n        else {\n            window.addEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n    }\n    disableScrolling() {\n        window.removeEventListener('ionScroll', this.handleScrollEvent);\n        window.removeEventListener('scroll', this.handleScrollEvent);\n        window.removeEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.removeEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n        else {\n            window.removeEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n    }\n    updateMapBounds() {\n        if (this.element) {\n            const mapRect = this.element.getBoundingClientRect();\n            CapacitorGoogleMaps.onScroll({\n                id: this.id,\n                mapBounds: {\n                    x: mapRect.x,\n                    y: mapRect.y,\n                    width: mapRect.width,\n                    height: mapRect.height,\n                },\n            });\n        }\n    }\n    /*\n    private findContainerElement(): HTMLElement | null {\n      if (!this.element) {\n        return null;\n      }\n  \n      let parentElement = this.element.parentElement;\n      while (parentElement !== null) {\n        if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n          return parentElement;\n        }\n  \n        parentElement = parentElement.parentElement;\n      }\n  \n      return null;\n    }\n    */\n    /**\n     * Set the event listener on the map for 'onCameraIdle' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraIdleListener(callback) {\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n        }\n        if (callback) {\n            this.onCameraIdleListener = await CapacitorGoogleMaps.addListener('onCameraIdle', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraIdleListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onBoundsChanged' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnBoundsChangedListener(callback) {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n        }\n        if (callback) {\n            this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener('onBoundsChanged', this.generateCallback(callback));\n        }\n        else {\n            this.onBoundsChangedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCameraMoveStarted' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraMoveStartedListener(callback) {\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n        }\n        if (callback) {\n            this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener('onCameraMoveStarted', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraMoveStartedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterClickListener(callback) {\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterClickListener = await CapacitorGoogleMaps.addListener('onClusterClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterInfoWindowClickListener(callback) {\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterInfoWindowClickListener =\n                await CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnInfoWindowClickListener(callback) {\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener('onInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMapClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMapClickListener(callback) {\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n        }\n        if (callback) {\n            this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMapClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerClickListener(callback) {\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n        }\n        if (callback) {\n            this.onMarkerClickListener = await CapacitorGoogleMaps.addListener('onMarkerClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationButtonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationButtonClickListener(callback) {\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationButtonClickListener =\n                await CapacitorGoogleMaps.addListener('onMyLocationButtonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationButtonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationClickListener(callback) {\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener('onMyLocationClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    /**\n     * Remove all event listeners on the map.\n     *\n     * @param callback\n     * @returns\n     */\n    async removeAllMapListeners() {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n            this.onBoundsChangedListener = undefined;\n        }\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n            this.onCameraIdleListener = undefined;\n        }\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n            this.onCameraMoveStartedListener = undefined;\n        }\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n            this.onClusterClickListener = undefined;\n        }\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n            this.onInfoWindowClickListener = undefined;\n        }\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n            this.onMapClickListener = undefined;\n        }\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n            this.onMarkerClickListener = undefined;\n        }\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n            this.onMyLocationButtonClickListener = undefined;\n        }\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    generateCallback(callback) {\n        const mapId = this.id;\n        return (data) => {\n            if (data.mapId == mapId) {\n                callback(data);\n            }\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}