{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodePath = exports.encodePath = void 0;\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n */\n\nfunction encodePath(path) {\n  var result = [];\n  var start = [0, 0];\n  var end;\n\n  var encodePart = function (part) {\n    part = part < 0 ? ~(part << 1) : part << 1;\n\n    while (part >= 0x20) {\n      result.push(String.fromCharCode((0x20 | part & 0x1f) + 63));\n      part >>= 5;\n    }\n\n    result.push(String.fromCharCode(part + 63));\n  };\n\n  for (let i = 0, I = path.length || 0; i < I; ++i) {\n    end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n    encodePart(end[0] - start[0]); // lat\n\n    encodePart(end[1] - start[1]); // lng\n\n    start = end;\n  }\n\n  return result.join(\"\");\n}\n\nexports.encodePath = encodePath;\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n */\n\nfunction decodePath(encodedPath) {\n  let len = encodedPath.length || 0;\n  let path = new Array(Math.floor(encodedPath.length / 2));\n  let index = 0;\n  let lat = 0;\n  let lng = 0;\n  let pointIndex;\n\n  for (pointIndex = 0; index < len; ++pointIndex) {\n    let result = 1;\n    let shift = 0;\n    let b;\n\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n\n    lat += result & 1 ? ~(result >> 1) : result >> 1;\n    result = 1;\n    shift = 0;\n\n    do {\n      b = encodedPath.charCodeAt(index++) - 63 - 1;\n      result += b << shift;\n      shift += 5;\n    } while (b >= 0x1f);\n\n    lng += result & 1 ? ~(result >> 1) : result >> 1;\n    path[pointIndex] = {\n      lat: lat * 1e-5,\n      lng: lng * 1e-5\n    };\n  }\n\n  path.length = pointIndex;\n  return path;\n}\n\nexports.decodePath = decodePath;","map":{"version":3,"names":["Object","defineProperty","exports","value","decodePath","encodePath","path","result","start","end","encodePart","part","push","String","fromCharCode","i","I","length","Math","round","lat","lng","join","encodedPath","len","Array","floor","index","pointIndex","shift","b","charCodeAt"],"sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@googlemaps/google-maps-services-js/dist/util.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePath = exports.encodePath = void 0;\n/**\n * Polyline encodes an array of LatLng objects.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n *\n */\nfunction encodePath(path) {\n    var result = [];\n    var start = [0, 0];\n    var end;\n    var encodePart = function (part) {\n        part = part < 0 ? ~(part << 1) : part << 1;\n        while (part >= 0x20) {\n            result.push(String.fromCharCode((0x20 | (part & 0x1f)) + 63));\n            part >>= 5;\n        }\n        result.push(String.fromCharCode(part + 63));\n    };\n    for (let i = 0, I = path.length || 0; i < I; ++i) {\n        end = [Math.round(path[i].lat * 1e5), Math.round(path[i].lng * 1e5)];\n        encodePart(end[0] - start[0]); // lat\n        encodePart(end[1] - start[1]); // lng\n        start = end;\n    }\n    return result.join(\"\");\n}\nexports.encodePath = encodePath;\n/**\n * Decodes a polyline encoded string.\n *\n * See {@link https://developers.google.com/maps/documentation/utilities/polylinealgorithm}\n */\nfunction decodePath(encodedPath) {\n    let len = encodedPath.length || 0;\n    let path = new Array(Math.floor(encodedPath.length / 2));\n    let index = 0;\n    let lat = 0;\n    let lng = 0;\n    let pointIndex;\n    for (pointIndex = 0; index < len; ++pointIndex) {\n        let result = 1;\n        let shift = 0;\n        let b;\n        do {\n            b = encodedPath.charCodeAt(index++) - 63 - 1;\n            result += b << shift;\n            shift += 5;\n        } while (b >= 0x1f);\n        lat += result & 1 ? ~(result >> 1) : result >> 1;\n        result = 1;\n        shift = 0;\n        do {\n            b = encodedPath.charCodeAt(index++) - 63 - 1;\n            result += b << shift;\n            shift += 5;\n        } while (b >= 0x1f);\n        lng += result & 1 ? ~(result >> 1) : result >> 1;\n        path[pointIndex] = { lat: lat * 1e-5, lng: lng * 1e-5 };\n    }\n    path.length = pointIndex;\n    return path;\n}\nexports.decodePath = decodePath;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}