{"ast":null,"code":"import _asyncToGenerator from \"/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { NavController, Platform } from '@ionic/angular';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { AvatarService } from './services/avatar.service';\nimport { StatusBar, Style } from '@capacitor/status-bar';\nimport { Auth } from '@angular/fire/auth';\nlet AppComponent = class AppComponent {\n  constructor(avatar, auth, platform, nav) {\n    this.avatar = avatar;\n    this.auth = auth;\n    this.platform = platform;\n    this.nav = nav;\n    this.appPages = [{\n      title: 'Payment',\n      url: 'payment',\n      icon: 'card',\n      color: 'primary'\n    }, {\n      title: 'Promotion',\n      url: 'promotion',\n      icon: 'pricetag',\n      color: 'primary'\n    }, {\n      title: 'Ride History',\n      url: 'history',\n      icon: 'timer',\n      color: 'primary'\n    }, {\n      title: 'Support',\n      url: 'support',\n      icon: 'chatbubbles',\n      color: 'primary'\n    }, {\n      title: 'About',\n      url: 'about',\n      icon: 'information-circle',\n      color: 'primary'\n    }];\n    this.initialize();\n  }\n\n  initialize() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.platform.ready().then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (readySource) {\n          _this.auth.onAuthStateChanged( /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(function* (user) {\n              console.log(user);\n              _this.user = user;\n              _this.source = readySource;\n\n              if (readySource != 'dom') {\n                yield StatusBar.setBackgroundColor({\n                  color: '#3880ff'\n                });\n              }\n\n              yield _this.LoadSplash();\n            });\n\n            return function (_x2) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  LoadSplash() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield SplashScreen.show();\n      if (_this2.source != 'dom') yield StatusBar.setOverlaysWebView({\n        overlay: true\n      });\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)'); // Listen for changes to the prefers-color-scheme media query\n\n      prefersDark.addListener(mediaQuery => _this2.toggleDarkTheme(mediaQuery.matches));\n\n      _this2.toggleDarkTheme(prefersDark.matches);\n\n      if (_this2.source != 'dom') yield StatusBar.setOverlaysWebView({\n        overlay: true\n      });\n    })();\n  }\n\n  toggleDarkTheme(shouldAdd) {\n    if (shouldAdd) {\n      StatusBar.setStyle({\n        style: Style.Dark\n      });\n    } else {\n      StatusBar.setStyle({\n        style: Style.Light\n      });\n    }\n  }\n\n  gotoProfile() {\n    this.nav.navigateForward('profile');\n  }\n\n  gotoPage(p) {\n    this.nav.navigateForward(p);\n  }\n\n};\n\nAppComponent.ctorParameters = () => [{\n  type: AvatarService\n}, {\n  type: Auth\n}, {\n  type: Platform\n}, {\n  type: NavController\n}];\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","NavController","Platform","SplashScreen","AvatarService","StatusBar","Style","Auth","AppComponent","constructor","avatar","auth","platform","nav","title","url","icon","color","initialize","ready","then","readySource","onAuthStateChanged","user","console","log","source","setBackgroundColor","LoadSplash","show","setOverlaysWebView","overlay","prefersDark","window","matchMedia","addListener","mediaQuery","toggleDarkTheme","matches","shouldAdd","setStyle","style","Dark","Light","gotoProfile","navigateForward","gotoPage","p","selector","template"],"sourceRoot":"","sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/src/app/app.component.ts"],"sourcesContent":["import { Component, NgZone } from '@angular/core';\nimport { NavController, Platform, IonicModule } from '@ionic/angular';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { AvatarService } from './services/avatar.service';\nimport { StatusBar, Style } from '@capacitor/status-bar';\nimport { timer } from 'rxjs';\nimport { Auth } from '@angular/fire/auth';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  public appPages = [\n    { title: 'Payment', url: 'payment', icon: 'card', color: 'primary' },\n    { title: 'Promotion', url: 'promotion', icon: 'pricetag', color: 'primary' },\n    { title: 'Ride History', url: 'history', icon: 'timer', color: 'primary' },\n    { title: 'Support', url: 'support', icon: 'chatbubbles', color: 'primary' },\n    { title: 'About', url: 'about', icon: 'information-circle', color: 'primary' },\n  ];\n  source: string;\n  user: import(\"@angular/fire/auth\").User;\n  constructor(public avatar: AvatarService, private auth: Auth, private platform: Platform, private nav: NavController) {\n    this.initialize()\n\n  }\n\n  async initialize() {\n    \n    this.platform.ready().then(async (readySource) => {\n      this.auth.onAuthStateChanged(async (user)=>{\n      console.log(user);\n      this.user = user;\n      this.source = readySource\n     \n      if (readySource != 'dom'){\n      await StatusBar.setBackgroundColor({color: '#3880ff'})\n      }\n      await this.LoadSplash();\n      \n\n    })\n\n    \n\n      });\n  }\n\n  async LoadSplash(){\n    await SplashScreen.show();\n\n    if (this.source != 'dom')\n    await StatusBar.setOverlaysWebView({ overlay: true });\n\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Listen for changes to the prefers-color-scheme media query\n    prefersDark.addListener((mediaQuery) => this.toggleDarkTheme(mediaQuery.matches));\n \n     this.toggleDarkTheme(prefersDark.matches);\n\n     if (this.source != 'dom')\n    await StatusBar.setOverlaysWebView({ overlay: true });\n  }\n\n\n  toggleDarkTheme(shouldAdd) {\n    if (shouldAdd){\n      StatusBar.setStyle({ style: Style.Dark });\n    }else{\n     StatusBar.setStyle({ style: Style.Light });\n    }\n  }\n\n  gotoProfile(){\n    this.nav.navigateForward('profile');\n  }\n\n  gotoPage(p){\n    this.nav.navigateForward(p);\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}