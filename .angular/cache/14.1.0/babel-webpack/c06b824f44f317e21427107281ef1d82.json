{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPremiumPlanQueryString = exports.toTimestamp = exports.serializer = exports.latLngArrayToStringMaybeEncoded = exports.toLatLngLiteral = exports.latLngBoundsToString = exports.objectToString = exports.latLngToString = void 0;\n\nconst util_1 = require(\"./util\");\n\nconst url_signature_1 = require(\"@googlemaps/url-signature\");\n\nconst query_string_1 = require(\"query-string\");\n\nconst separator = \"|\";\n\nfunction latLngToString(o) {\n  if (typeof o === \"string\") {\n    return o;\n  } else if (Array.isArray(o) && o.length === 2) {// no transformation\n  } else if (\"lat\" in o && \"lng\" in o) {\n    o = [o.lat, o.lng];\n  } else if (\"latitude\" in o && \"longitude\" in o) {\n    o = [o.latitude, o.longitude];\n  } else {\n    throw new TypeError();\n  }\n\n  return o.map(x => {\n    return x.toString();\n  }).join(\",\");\n}\n\nexports.latLngToString = latLngToString;\n\nfunction objectToString(o) {\n  if (typeof o === \"string\") {\n    return o;\n  } else {\n    let keys = Object.keys(o);\n    keys.sort();\n    return keys.map(k => k + \":\" + o[k]).join(separator);\n  }\n}\n\nexports.objectToString = objectToString;\n\nfunction latLngBoundsToString(latLngBounds) {\n  if (typeof latLngBounds === \"string\") {\n    return latLngBounds;\n  } else {\n    return latLngToString(latLngBounds.southwest) + separator + latLngToString(latLngBounds.northeast);\n  }\n}\n\nexports.latLngBoundsToString = latLngBoundsToString;\n\nfunction toLatLngLiteral(o) {\n  if (typeof o === \"string\") {\n    const parts = o.split(\",\").map(Number);\n    return {\n      lat: parts[0],\n      lng: parts[1]\n    };\n  } else if (Array.isArray(o) && o.length === 2) {\n    const parts = o.map(Number);\n    return {\n      lat: parts[0],\n      lng: parts[1]\n    };\n  } else if (\"lat\" in o && \"lng\" in o) {\n    return o;\n  } else if (\"latitude\" in o && \"longitude\" in o) {\n    return {\n      lat: o.latitude,\n      lng: o.longitude\n    };\n  } else {\n    throw new TypeError();\n  }\n}\n\nexports.toLatLngLiteral = toLatLngLiteral;\n\nfunction latLngArrayToStringMaybeEncoded(o) {\n  if (typeof o === \"string\") {\n    return o;\n  }\n\n  const concatenated = o.map(latLngToString).join(separator);\n  const encoded = `enc:${(0, util_1.encodePath)(o.map(toLatLngLiteral))}`;\n\n  if (encoded.length < concatenated.length) {\n    return encoded;\n  }\n\n  return concatenated;\n}\n\nexports.latLngArrayToStringMaybeEncoded = latLngArrayToStringMaybeEncoded;\n\nfunction serializer(format, baseUrl, queryStringOptions = {\n  arrayFormat: \"separator\",\n  arrayFormatSeparator: separator\n}) {\n  return params => {\n    // avoid mutating params\n    const serializedParams = Object.assign({}, params);\n    Object.keys(format).forEach(key => {\n      if (key in serializedParams) {\n        serializedParams[key] = format[key](serializedParams[key]);\n      }\n    });\n\n    if (\"client_id\" in serializedParams && \"client_secret\" in serializedParams) {\n      // Special case to handle premium plan signature\n      return createPremiumPlanQueryString(serializedParams, queryStringOptions, baseUrl);\n    }\n\n    return (0, query_string_1.stringify)(serializedParams, queryStringOptions);\n  };\n}\n\nexports.serializer = serializer;\n\nfunction toTimestamp(o) {\n  if (o === \"now\") {\n    return o;\n  }\n\n  if (o instanceof Date) {\n    return Number(o) / 1000;\n  }\n\n  return o;\n}\n\nexports.toTimestamp = toTimestamp;\n\nfunction createPremiumPlanQueryString(serializedParams, queryStringOptions, baseUrl) {\n  serializedParams.client = serializedParams.client_id;\n  const clientSecret = serializedParams.client_secret;\n  delete serializedParams.client_id;\n  delete serializedParams.client_secret;\n  const partialQueryString = (0, query_string_1.stringify)(serializedParams, queryStringOptions);\n  const unsignedUrl = `${baseUrl}?${partialQueryString}`;\n  const signature = (0, url_signature_1.createSignature)(unsignedUrl, clientSecret); // The signature must come last\n\n  return `${partialQueryString}&signature=${signature}`;\n}\n\nexports.createPremiumPlanQueryString = createPremiumPlanQueryString;","map":{"version":3,"names":["Object","defineProperty","exports","value","createPremiumPlanQueryString","toTimestamp","serializer","latLngArrayToStringMaybeEncoded","toLatLngLiteral","latLngBoundsToString","objectToString","latLngToString","util_1","require","url_signature_1","query_string_1","separator","o","Array","isArray","length","lat","lng","latitude","longitude","TypeError","map","x","toString","join","keys","sort","k","latLngBounds","southwest","northeast","parts","split","Number","concatenated","encoded","encodePath","format","baseUrl","queryStringOptions","arrayFormat","arrayFormatSeparator","params","serializedParams","assign","forEach","key","stringify","Date","client","client_id","clientSecret","client_secret","partialQueryString","unsignedUrl","signature","createSignature"],"sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@googlemaps/google-maps-services-js/dist/serialize.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createPremiumPlanQueryString = exports.toTimestamp = exports.serializer = exports.latLngArrayToStringMaybeEncoded = exports.toLatLngLiteral = exports.latLngBoundsToString = exports.objectToString = exports.latLngToString = void 0;\nconst util_1 = require(\"./util\");\nconst url_signature_1 = require(\"@googlemaps/url-signature\");\nconst query_string_1 = require(\"query-string\");\nconst separator = \"|\";\nfunction latLngToString(o) {\n    if (typeof o === \"string\") {\n        return o;\n    }\n    else if (Array.isArray(o) && o.length === 2) {\n        // no transformation\n    }\n    else if (\"lat\" in o && \"lng\" in o) {\n        o = [o.lat, o.lng];\n    }\n    else if (\"latitude\" in o && \"longitude\" in o) {\n        o = [o.latitude, o.longitude];\n    }\n    else {\n        throw new TypeError();\n    }\n    return o\n        .map((x) => {\n        return x.toString();\n    })\n        .join(\",\");\n}\nexports.latLngToString = latLngToString;\nfunction objectToString(o) {\n    if (typeof o === \"string\") {\n        return o;\n    }\n    else {\n        let keys = Object.keys(o);\n        keys.sort();\n        return keys.map((k) => k + \":\" + o[k]).join(separator);\n    }\n}\nexports.objectToString = objectToString;\nfunction latLngBoundsToString(latLngBounds) {\n    if (typeof latLngBounds === \"string\") {\n        return latLngBounds;\n    }\n    else {\n        return (latLngToString(latLngBounds.southwest) +\n            separator +\n            latLngToString(latLngBounds.northeast));\n    }\n}\nexports.latLngBoundsToString = latLngBoundsToString;\nfunction toLatLngLiteral(o) {\n    if (typeof o === \"string\") {\n        const parts = o.split(\",\").map(Number);\n        return { lat: parts[0], lng: parts[1] };\n    }\n    else if (Array.isArray(o) && o.length === 2) {\n        const parts = o.map(Number);\n        return { lat: parts[0], lng: parts[1] };\n    }\n    else if (\"lat\" in o && \"lng\" in o) {\n        return o;\n    }\n    else if (\"latitude\" in o && \"longitude\" in o) {\n        return { lat: o.latitude, lng: o.longitude };\n    }\n    else {\n        throw new TypeError();\n    }\n}\nexports.toLatLngLiteral = toLatLngLiteral;\nfunction latLngArrayToStringMaybeEncoded(o) {\n    if (typeof o === \"string\") {\n        return o;\n    }\n    const concatenated = o.map(latLngToString).join(separator);\n    const encoded = `enc:${(0, util_1.encodePath)(o.map(toLatLngLiteral))}`;\n    if (encoded.length < concatenated.length) {\n        return encoded;\n    }\n    return concatenated;\n}\nexports.latLngArrayToStringMaybeEncoded = latLngArrayToStringMaybeEncoded;\nfunction serializer(format, baseUrl, queryStringOptions = {\n    arrayFormat: \"separator\",\n    arrayFormatSeparator: separator,\n}) {\n    return (params) => {\n        // avoid mutating params\n        const serializedParams = Object.assign({}, params);\n        Object.keys(format).forEach((key) => {\n            if (key in serializedParams) {\n                serializedParams[key] = format[key](serializedParams[key]);\n            }\n        });\n        if (\"client_id\" in serializedParams && \"client_secret\" in serializedParams) {\n            // Special case to handle premium plan signature\n            return createPremiumPlanQueryString(serializedParams, queryStringOptions, baseUrl);\n        }\n        return (0, query_string_1.stringify)(serializedParams, queryStringOptions);\n    };\n}\nexports.serializer = serializer;\nfunction toTimestamp(o) {\n    if (o === \"now\") {\n        return o;\n    }\n    if (o instanceof Date) {\n        return Number(o) / 1000;\n    }\n    return o;\n}\nexports.toTimestamp = toTimestamp;\nfunction createPremiumPlanQueryString(serializedParams, queryStringOptions, baseUrl) {\n    serializedParams.client = serializedParams.client_id;\n    const clientSecret = serializedParams.client_secret;\n    delete serializedParams.client_id;\n    delete serializedParams.client_secret;\n    const partialQueryString = (0, query_string_1.stringify)(serializedParams, queryStringOptions);\n    const unsignedUrl = `${baseUrl}?${partialQueryString}`;\n    const signature = (0, url_signature_1.createSignature)(unsignedUrl, clientSecret);\n    // The signature must come last\n    return `${partialQueryString}&signature=${signature}`;\n}\nexports.createPremiumPlanQueryString = createPremiumPlanQueryString;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}