{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.placeAutocomplete = exports.defaultParamsSerializer = exports.defaultUrl = exports.PlaceAutocompleteType = void 0;\n\nconst serialize_1 = require(\"../serialize\");\n\nconst client_1 = require(\"../client\");\n\nvar PlaceAutocompleteType;\n\n(function (PlaceAutocompleteType) {\n  /**\n   * instructs the Place Autocomplete service to return only geocoding results, rather than business results.\n   * Generally, you use this request to disambiguate results where the location specified may be indeterminate.\n   */\n  PlaceAutocompleteType[\"geocode\"] = \"geocode\";\n  /**\n   * instructs the Place Autocomplete service to return only geocoding results with a precise address.\n   * Generally, you use this request when you know the user will be looking for a fully specified address.\n   */\n\n  PlaceAutocompleteType[\"address\"] = \"address\";\n  /** instructs the Place Autocomplete service to return only business results. */\n\n  PlaceAutocompleteType[\"establishment\"] = \"establishment\";\n  /**\n   * the `(regions)` type collection instructs the Places service to return any result matching the following types:\n   *  - `locality`\n   *  - `sublocality`\n   *  - `postal_code`\n   *  - `country`\n   *  - `administrative_area_level_1`\n   *  - `administrative_area_level_2`\n   */\n\n  PlaceAutocompleteType[\"regions\"] = \"(regions)\";\n  /** the (cities) type collection instructs the Places service to return results that match `locality` or `administrative_area_level_3`. */\n\n  PlaceAutocompleteType[\"cities\"] = \"(cities)\";\n})(PlaceAutocompleteType = exports.PlaceAutocompleteType || (exports.PlaceAutocompleteType = {}));\n\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/place/autocomplete/json\";\nexports.defaultParamsSerializer = (0, serialize_1.serializer)({\n  location: serialize_1.latLngToString,\n  origin: serialize_1.latLngToString\n}, exports.defaultUrl);\n\nfunction placeAutocomplete(_a, axiosInstance) {\n  var {\n    params,\n    method = \"get\",\n    url = exports.defaultUrl,\n    paramsSerializer = exports.defaultParamsSerializer\n  } = _a,\n      config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n\n  if (axiosInstance === void 0) {\n    axiosInstance = client_1.defaultAxiosInstance;\n  }\n\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url,\n    paramsSerializer\n  }, config));\n}\n\nexports.placeAutocomplete = placeAutocomplete;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","placeAutocomplete","defaultParamsSerializer","defaultUrl","PlaceAutocompleteType","serialize_1","require","client_1","serializer","location","latLngToString","origin","_a","axiosInstance","params","method","url","paramsSerializer","config","defaultAxiosInstance","assign"],"sources":["/Users/chineduetoh/Desktop/IONIC PROJECTS/Go_Rider/node_modules/@googlemaps/google-maps-services-js/dist/places/autocomplete.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.placeAutocomplete = exports.defaultParamsSerializer = exports.defaultUrl = exports.PlaceAutocompleteType = void 0;\nconst serialize_1 = require(\"../serialize\");\nconst client_1 = require(\"../client\");\nvar PlaceAutocompleteType;\n(function (PlaceAutocompleteType) {\n    /**\n     * instructs the Place Autocomplete service to return only geocoding results, rather than business results.\n     * Generally, you use this request to disambiguate results where the location specified may be indeterminate.\n     */\n    PlaceAutocompleteType[\"geocode\"] = \"geocode\";\n    /**\n     * instructs the Place Autocomplete service to return only geocoding results with a precise address.\n     * Generally, you use this request when you know the user will be looking for a fully specified address.\n     */\n    PlaceAutocompleteType[\"address\"] = \"address\";\n    /** instructs the Place Autocomplete service to return only business results. */\n    PlaceAutocompleteType[\"establishment\"] = \"establishment\";\n    /**\n     * the `(regions)` type collection instructs the Places service to return any result matching the following types:\n     *  - `locality`\n     *  - `sublocality`\n     *  - `postal_code`\n     *  - `country`\n     *  - `administrative_area_level_1`\n     *  - `administrative_area_level_2`\n     */\n    PlaceAutocompleteType[\"regions\"] = \"(regions)\";\n    /** the (cities) type collection instructs the Places service to return results that match `locality` or `administrative_area_level_3`. */\n    PlaceAutocompleteType[\"cities\"] = \"(cities)\";\n})(PlaceAutocompleteType = exports.PlaceAutocompleteType || (exports.PlaceAutocompleteType = {}));\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/place/autocomplete/json\";\nexports.defaultParamsSerializer = (0, serialize_1.serializer)({\n    location: serialize_1.latLngToString,\n    origin: serialize_1.latLngToString\n}, exports.defaultUrl);\nfunction placeAutocomplete(_a, axiosInstance) {\n    var { params, method = \"get\", url = exports.defaultUrl, paramsSerializer = exports.defaultParamsSerializer } = _a, config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n    if (axiosInstance === void 0) { axiosInstance = client_1.defaultAxiosInstance; }\n    return axiosInstance(Object.assign({ params,\n        method,\n        url,\n        paramsSerializer }, config));\n}\nexports.placeAutocomplete = placeAutocomplete;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}